{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["fabric","require","Nuclear","createReactClass","reactor","Reactor","debug","keys","obj","key","ret","Object","Array","isArray","Error","hasOwnProperty","keyMirror","fabricData","activeObject","fabricCanvas","Canvas","fabricStore","Store","getInitialState","toImmutable","objects","initialize","this","on","saveFabricData","saveActiveObject","state","set","value","registerStores","Fabric","componentDidMount","el","ReactDOM","findDOMNode","height","window","innerHeight","width","backgroundColor","dispatch","toObject","getActiveObject","renderAll","render","NewObjects","mixins","ReactMixin","getDataBindings","get","size","style","float","onClick","addSquare","position","remove","color","Math","random","toString","bounding_box","Rect","originX","originY","fill","borderColor","opacity","top","left","drop","console","log","add","setActiveObject","fire","fabricObject","App","useState","videoFilePath","setVideoFileURL","playing","setPlaying","setSeeking","sliderPercent","setSliderPercent","player","setPlayer","duration","setDuration","currentFrame","setCurrentFrame","downloadFile","a","fileName","json","JSON","stringify","getObjects","blob","Blob","type","URL","createObjectURL","href","link","document","createElement","download","body","appendChild","click","removeChild","className","e","total_frames","seekTo","getCurrentTime","event","parseInt","onChange","target","files","onProgress","val","ref","onDuration","url","controls","min","max","step","onMouseDown","parseFloat","onMouseUp","Boolean","location","hostname","match","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4b58674d.chunk.js","sourcesContent":["import React, { useState } from \"react\"; \nimport ReactDOM from 'react-dom'\nimport './App.css';\nimport ReactPlayer from 'react-player'\n\nconst fabric = require(\"fabric\").fabric;\nconst Nuclear = require(\"nuclear-js\");\nconst createReactClass = require('create-react-class');\n\nvar frame_rate = 15;\nvar current_annotation_data = []\n\nvar keyMirror = function(obj) {\n  var ret = {};\n  var key;\n  if (!(obj instanceof Object && !Array.isArray(obj))) {\n    throw new Error('keyMirror(...): Argument must be an object.');\n  }\n  for (key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      ret[key] = key;\n    }\n  }\n  return ret;\n};\n\nvar reactor = new Nuclear.Reactor({ debug: true });\nvar keys = keyMirror({ fabricData: null, activeObject: null });\n\n// globally accessable fabricCanvas instance\nvar fabricCanvas = new fabric.Canvas();\nvar canvas_DOM;\n\n// A place to put fabric data\nvar fabricStore = Nuclear.Store({\n  getInitialState() {\n    return Nuclear.toImmutable({\n    \tfabricData: {\n      \tobjects: [],\n      },\n      activeObject: false,\n    })\n  },\n  initialize() {\n    this.on(keys.fabricData, this.saveFabricData)\n    this.on(keys.activeObject, this.saveActiveObject)\n  },\n  saveFabricData(state, fabricData) {\n\t\treturn state.set('fabricData', Nuclear.toImmutable(fabricData));\n\t},\n  saveActiveObject(state, value) {\n\t\treturn state.set('activeObject',value);\n\t}\n});\n\nreactor.registerStores({\n  'fabricStore': fabricStore,\n});\n\nvar Fabric = createReactClass({\n\tcomponentDidMount() {\n  \tvar el = ReactDOM.findDOMNode(this);\n    canvas_DOM = el\n    \n    // Here we have the canvas so we can initialize fabric\n    fabricCanvas.initialize(el, {\n    \theight: window.innerHeight*.95,\n      width: ((window.innerHeight * .9)/9)*16,\n      backgroundColor : null,\n    });\n    \n    // on mouse up lets save some state\n    fabricCanvas.on('mouse:up', () => {\n      reactor.dispatch(keys.fabricData, fabricCanvas.toObject());\n      reactor.dispatch(keys.activeObject, !!fabricCanvas.getActiveObject());\n    });\n    \n    // an event we will fire when we want to save state\n    fabricCanvas.on('saveData', () => {\n    \treactor.dispatch(keys.fabricData, fabricCanvas.toObject());\n      reactor.dispatch(keys.activeObject, !!fabricCanvas.getActiveObject());\n      fabricCanvas.renderAll(); // programatic changes we make will not trigger a render in fabric\n    });\n  }, \n  render() {\n    return <canvas></canvas>\n  }\n});\n\nvar player_add;\n\n\nvar NewObjects = createReactClass({\n\tmixins: [reactor.ReactMixin],\n  getDataBindings() {\n  \treturn {\n    \tfabricData: ['fabricStore', 'fabricData'],\n    \tactiveObject: ['fabricStore', 'activeObject'],\n    };\n  },\n  render: function() {\n  \tif (this.state.fabricData.get('objects').size == 0) {\n    \t// no object is on the canvas so show interface to add one\n      //<input type=\"file\" id=\"video_submit\" value=\"none\"/> //onClick={this.addKanalImg}/>\n      return (\n      <div style={{float: \"right\"}}>\n        <button onClick={this.addSquare} style={{position:\"relative\"}}>Add Square</button>\n        <button onClick={this.remove} style={{position:\"relative\"}}>Remove</button>\n      </div>\n      );\n    } else {\n    \t// an object is selected so lets interact with it\n    \treturn (\n        <div style={{float: \"right\"}}>\n          <button onClick={this.addSquare} style={{position:\"relative\"}}>Add Square</button>\n          <button onClick={this.remove} style={{position:\"relative\"}}>Remove</button>\n        </div>\n      );\n    }//else {\n    \t// if there is an object but it is not selected then remove the buttons\n    \t//return null;\n    //}\n  },\n  addSquare() {\n    var color = \"#\" + ((1<<24)*Math.random() | 0).toString(16)\n    var bounding_box = new fabric.Rect({\n    \theight: 50,\n    \twidth: 50,\n      originX: 'center',\n      originY: 'center',\n      fill: color,\n      borderColor: '#000',\n      opacity: '.4',\n      top: fabricCanvas.height / 2,\n      left: fabricCanvas.width / 2,\n    }, function(drop){\n        console.log(drop)\n    })\n  \tfabricCanvas.add(bounding_box);\n    fabricCanvas.setActiveObject(bounding_box);\n    fabricCanvas.fire('saveData');\n  },\n  remove() {\n    fabricCanvas.remove(fabricCanvas.getActiveObject());\n    fabricCanvas.fire('saveData');\n  }\n});\n\nvar ActiveObject = createReactClass({\n\tmixins: [reactor.ReactMixin],\n  getDataBindings() {\n  \treturn {\n    \tfabricObject: ['fabricStore', 'fabricData', 'objects', 0],\n      activeObject: ['fabricStore', 'activeObject']\n    };\n  },\n  render: function() {\n    //return null;\n    console.log(this.state.activeObject)\n  \tif (this.state.fabricObject) {\n    \t// if an object exists in state we can acess the data from any where in the app\n    \tvar fill = this.state.fabricObject.get('fill');\n      console.log((fabricCanvas.getActiveObject()))\n      return (<div>\n        <div><b>Active Object</b></div>\n        <div>fill: <span style={{ color: fill}}>{this.state.fabricObject.get('fill')}</span></div>\n        <div>top: {this.state.fabricObject.get('top')}</div>\n        <div>left: {this.state.fabricObject.get('left')}</div>\n        <div>angle: {this.state.fabricObject.get('angle')}</div>\n        <div>scaleX: {this.state.fabricObject.get('scaleX')}</div>\n        <div>scaleY: {this.state.fabricObject.get('scaleY')}</div>\n      </div>);\n    } else {\n      console.log(fabricCanvas.getActiveObject())\n    \treturn null;\n    }\n  },\n});\n\n\n//Current frame counter\nfunction App() {\n  const [videoFilePath, setVideoFileURL] = useState(null);\n  const handleVideoUpload = (event) => {\n    setVideoFileURL(URL.createObjectURL(event.target.files[0]));\n    };\n\n\n  const [videoFilePath1, setVideoFileURL1] = useState(null);\n  const handleVideoUpload1 = (event) => {\n    setVideoFileURL1(URL.createObjectURL(event.target.files[0]));\n    };\n  \n\n  const [playing, setPlaying] = useState(false);\n  const handlePlaying = (event) => {\n    setPlaying(!playing)\n  }\n\n  const [seeking, setSeeking] = useState(false)\n  const [sliderPercent, setSliderPercent] = useState(0)\n\n  const handleSeekChange = e => {\n    setSliderPercent(parseFloat(e.target.value))\n  }\n\n  const handleSeekMouseDown = e => {\n    setSeeking(true)\n  }\n\n  const handleSeekMouseUp = e => {\n    setSeeking(false)\n    player.seekTo(parseFloat(e.target.value))\n  }\n\n  const [player, setPlayer] = useState(null)\n  const handleSetPlayer = val => {\n    setPlayer(val)\n  }\n\n  const [duration, setDuration] = useState(0);\n  const handleSetDuration = val => {\n    setDuration(parseInt(val))\n    console.log(val)\n  }\n\n  const [currentFrame, setCurrentFrame] = useState(0)\n  const handleSetCurrentFrame = val => {\n    console.log(val)\n    var total_frames = duration * frame_rate\n    setCurrentFrame(val['played']*total_frames)\n  }\n\n  const skip_frame_forward = e =>{\n    var total_frames = duration * frame_rate\n    player.seekTo((((player.getCurrentTime()/duration)*total_frames)+1)/(total_frames))\n  }\n\n  const skip_frame_backward = e => {\n    var total_frames = duration * frame_rate\n    player.seekTo((((player.getCurrentTime()/duration)*total_frames)-1)/(total_frames))\n  }\n\n  const downloadFile = async () => {\n    const fileName = \"generated_annotations\";\n    const json = JSON.stringify(fabricCanvas.getObjects());\n    const blob = new Blob([json],{type:'application/json'});\n    const href = await URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = href;\n    link.download = fileName + \".json\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  return (\n    <div className=\"App\">\n      <div style={{ float: 'right' , position:'relative'}}>\n        <button onClick={skip_frame_backward}>Prev Frame</button>\n        <button onClick={handlePlaying}>Pause</button>\n        <button onClick={skip_frame_forward}>Next Frame</button>\n        <button onClick={downloadFile}>GENERATE JSON</button>\n        Frame # {parseInt(currentFrame)}\n    \t\t<NewObjects />\n      </div>\n      <input type=\"file\" onChange={handleVideoUpload} />\n      <ReactPlayer onProgress={handleSetCurrentFrame} ref={handleSetPlayer} onDuration={handleSetDuration} url={videoFilePath} width=\"90%\" height=\"90%\" playing={playing} controls={false} style={{position:'realtive', float:'left'}}/>\n      <Fabric/>\n      <input\n        width=\"100%\"\n        type='range' min={0} max={0.999999} step='any'\n        value={sliderPercent}\n        onMouseDown={handleSeekMouseDown}\n        onChange={handleSeekChange}\n        onMouseUp={handleSeekMouseUp}\n      />\n    </div>\n  );\n}\n      //<ActiveObject />\n      //<input type=\"file\" onChange={handleVideoUpload1} />\n      //<div>\n        //<ReactPlayer url={videoFilePath1} width=\"50%\" height=\"50%\" controls={true} style={{position:'relative', float:'left'}}/>\n        //<Fabric/>\n      //</div>\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}