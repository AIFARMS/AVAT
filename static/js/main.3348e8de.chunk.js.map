{"version":3,"sources":["fabric_types/fabric_boundingbox.js","annotations/bounding_box.js","processing/annotation-processing.js","static_data/behaviors.js","static_data/posture.js","static_data/confidence.js","static_data/columns.js","ui_elements/Components/instructions.js","reducer/frame_data.js","reducer/annotation_data.js","reducer/column_annot.js","reducer/current_frame.js","reducer/media_data.js","processing/actions.js","reducer/metadata.js","reducer/play_status.js","store.js","processing/exporting_annotation.js","ui_elements/Components/upload_modal.js","static_data/const.js","ui_elements/Components/nav_bar.js","processing/download.js","ui_elements/Components/fabric_canvas.js","ui_elements/Components/annot_table.js","ui_elements/Components/change_table.js","ui_elements/Pages/main_upload.js","static_data/constants.js","ui_elements/Pages/selection_screen.js","App.js","serviceWorker.js","index.js"],"names":["fabric","require","util","createClass","Rect","type","initialize","options","this","callSuper","set","label","toObject","object","extend","get","_render","ctx","font","fillStyle","fillText","width","height","uniScaleTransform","BoundingBox","constructor","top","left","color","id","behavior","rectangle","hasRotatingPoint","fill","opacity","id_text","Text","toString","fontSize","generate_no_behavior","group","Group","borderColor","hasBorders","temp","local_id","toJSON","generate_mouse_no_behavior","canvas","isDown","origX","origY","on","o","pointer","getPointer","e","x","y","rect_temp","originX","originY","angle","transparentCorners","add","Math","abs","renderAll","off","ExtractingAnnotation","annotation_json","frame_data","annotation_data","metadata","get_frame_data","scale_annotations","get_frame_rate","error","get_annotation_data","find_highest_localid","localid","i","length","j","push","parseInt","replace","max","new_annotations","temp_data","curr_frame","random","new_bbox","points","curr_points","k","x_scaled","y_scaled","po","Polygon","strokeWidth","stroke","scaleX","scaleY","objectCaching","cornerColor","display_text","centerX","grouppo","perPixelTargetFind","lockMovementY","lockMovementX","selectable","behaviors","value","posture","confidence","columns","remove_table_index","dataField","text","headerStyle","editable","editor","Type","SELECT","headerFormatter","React","createElement","Button","className","onClick","formatter","cellContent","row","Instructions","href","frameDataSlice","createSlice","name","initialState","data","reducers","init","state","payload","initOldAnnotation","modifyFrame","currentFrame","middleware","getDefaultMiddleware","serializableCheck","actions","annotationDataSlice","console","log","undefined","columnDataSlice","currFrameDataSlice","changeFrame","mediaDataSlice","addMedia","media","stream_num","initFrameData","frame_count","store","dispatch","updateFrameData","frame_number","getFrameData","getState","JSON","parse","stringify","initAnnotationData","updateAnnotationData","getAnnotationData","initColumnData","column_dat","getCurrentFrame","current_frame","setCurrentFrame","frame_num","setMedia","setFrameRate","frame_rate","setMediaType","media_type","setTotalFrames","total_frames","setSkipValue","skip_val","skip_value","getMetaData","togglePlay","metadataSlice","horizontal_res","vertical_res","setRes","playStatusSlice","play","configureStore","reducer","column_annot","media_data","play_status","devTools","process","ExportingAnnotation","VIDEO_METADATA","image_data","get_frame_json","standard_annot","Array","curr","frame_objects","_objects","raw_points","alert","get_frame_json_fullCanvas","get_frame_coco","num_streams","UploadModal","props","show","setShow","useState","videoFormat","setVideoFormat","firstUpload","setFirstUpload","stateFrameRate","setStateFrameRate","stateSkipValue","setStateSkipValue","stateColumnData","setStateColumnData","uploadExistingAnnotation","setUploadExistingAnnotation","useSelector","handleMediaUpload","event","target","files","Modal","uploadShow","size","backdrop","Header","Title","Body","style","display","Form","Row","Col","Control","as","onChange","defaultValue","htmlSize","custom","disabled","generateUploadButtons","uploadButtons","button_image","key","float","gridColumn","gridRow","File","multiple","accept","button_video","map","but","_","NavDropdown","Divider","InputGroup","Prepend","isInvalid","Feedback","disable_buttons","file","Promise","resolve","reject","reader","FileReader","onload","result","readAsText","then","handleOldAnnotation","Footer","variant","handleUpload","handleUploadToggle","totalFrames","default_column","CustomNavBar","setUploadShow","setProcess","playText","setPlayText","play_redux","handleClose","useEffect","onHide","closeButton","Navbar","sticky","bg","Brand","Nav","title","Item","handleDownloadJSON","converted_annot","video_width","video_height","async","json","blob","Blob","URL","createObjectURL","link","document","download","fileName","body","appendChild","click","removeChild","downloadFileJSON","NavLink","handleShow","handle_link_open","Dropdown","ButtonGroup","display_frame_num","Toggle","split","Menu","Label","placeholder","toggleKeyCheck","onBlur","skip_frame_backward","skip_frame_forward","drop","addToCanvas","change_annotation_type","canvasBackgroundUpdate","currFrameData","inputType","image_url","scaling_factor_width","scaling_factor_height","fabricCanvas","remove_obj","arguments","img","Image","clear","enlivenObjects","enlivenedObjects","forEach","obj","index","f_img","setBackgroundImage","src","remove","getObjects","FabricRender","setFabricCanvas","currindex","setCurrindex","upload","setUpload","frameToUpdate","setFrameToUpdate","metadata_redux","frame_redux","image_data_store","currFrame","currframe_redux","temp_fabricCanvas","Canvas","uniformScaling","includeDefaultValues","prototype","call","toDataURL","opt","delta","deltaY","zoom","getZoom","zoomToPoint","offsetX","offsetY","preventDefault","stopPropagation","objDrag","evt","altKey","isDragging","selection","lastPosX","clientX","lastPosY","clientY","vpt","viewportTransform","requestRenderAll","setViewportTransform","ReactDOM","findDOMNode","canvas_elem","getElementsByTagName","backgroundColor","video","currentTime","duration","reason","requestAnimFrame","renderLoop","pause","ceil","source","onloadedmetadata","oncanplaythrough","new_vid","videoWidth","videoHeight","position","AnnotTable","_ref","select_data","change_annot","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","Object","assign","border","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","background","fontWeight","render","global_id","elem","curr_idx","row_vals","curr_elem","check_keys","data-type","data-curr","change_row","beh","delete_row","genSelection","original","curr_data","dataset","annot_delte","splice","curr_img_data","objects","obj_keys","keys","AnnotationTable","col","useMemo","accessor","Tabs","defaultActiveKey","Tab","eventKey","handleChangeAnnot","current_screen_height","window","screen","toast_text","segmentation_flag","MainUpload","visualToggle","setVisualToggle","annotationType","setAnnotationType","boxCount","setBoxCount","oldAnnotation","setOldAnnotation","save","changeSave","keyCheck","changeKeyCheck","isLoading","setIsLoading","currAnnotationData","setCurrAnnotationData","annot_redux","column_redux","imagedata_redux","annot","url","revokeObjectURL","annotation_type_txt","frame_dat","generated_annotation","saved_annot","create_annotation","new_data","downloadOldAnnotation","frameVal","onKeyPress","annotext","addEventListener","removeEventListener","toggle_val","vid_metadata","ANNOTATION_VIDEO_NAME","handle_visual_toggle","floor","Toast","onClose","delay","autohide","zIndex","genFabricCanvas","fcanvas","canv","can","change_annotation_data","val","SelectionScreen","multiview","setMultiview","Jumbotron","Container","Carousel","controls","fade","selection_items","item","interval","slide_time","Card","Img","altText","description","App","Boolean","location","hostname","match","Provider","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3348e8de.chunk.js","sourcesContent":["const fabric = require(\"fabric\").fabric;\n\nvar boundingbox = fabric.util.createClass(fabric.Rect, {\n    type: 'boundingbox',\n    initialize: function(options) {\n        options || (options = { });\n\n        this.callSuper('initialize', options);\n        this.set('label', options.label || '');\n    },\n\n    toObject: function() {\n        return fabric.util.object.extend(this.callSuper('toObject'), {\n            label: this.get('label')\n        });\n    },\n\n    _render: function(ctx) {\n        this.callSuper('_render', ctx);\n\n        ctx.font = '10px Helvetica';\n        ctx.fillStyle = '#333';\n        /* scaleX = this.width / (this.width * this.scaleX),\n        scaleY = this.height / (this.height * this.scaleY); */\n        ctx.fillText(this.label, (-this.width/2), (-this.height/2 + 20));\n        ctx.uniScaleTransform = false;\n    }\n});\n  \nexport {boundingbox};","import { boundingbox } from '../fabric_types/fabric_boundingbox'\nconst fabric = require(\"fabric\").fabric;\n\nclass BoundingBox {\n    constructor(top, left, width, height, color, id, behavior) {\n        this.top = top;\n        this.left = left;\n        this.id = id;\n        this.behavior = behavior;\n        this.color = color;\n        this.width = width;\n        this.height = height;\n    }\n\n    rectangle(){\n        return new fabric.Rect({\n            hasRotatingPoint: false,\n            height: this.height,\n            width: this.width,\n            fill: this.color,\n            opacity: '.4',\n            top: this.top,\n            left: this.left,\n        });\n    } \n\n    //TODO Add text scaling\n    id_text(){\n        return new fabric.Text(this.id.toString(), {\n            fontSize: 20,\n            top: this.top,\n            left: this.left,\n            uniScaleTransform: false,\n          });\n    }\n\n    generate_no_behavior(){\n        var group = new fabric.Group([this.rectangle(), this.id_text()],{\n            borderColor: '#000000',\n            hasBorders: true,\n            uniScaleTransform: true\n        });\n        /* var box = new boundingbox({\n            hasRotatingPoint: false,\n            height: this.height,\n            width: this.width,\n            fill: this.color,\n            opacity: '.4',\n            top: this.top,\n            left: this.left,\n            label: this.id.toString()\n        }) */\n\n        function onChange(obj) {\n            var text_box = obj.target.item(1),\n                group = obj.target,\n                scaleX = group.width / (group.width * group.scaleX),\n                scaleY = group.height / (group.height * group.scaleY);\n            text_box.set('scaleX', scaleX);\n            text_box.set('scaleY', scaleY);\n        }\n        /* canvas.on({\n            'object:scaling': onChange\n        }) */\n\n        var temp = this.id \n        group.local_id = temp\n        //canvas.add(group)\n        //console.log(group.toJSON())\n        return group.toJSON()\n    }\n\n    generate_mouse_no_behavior(canvas){\n        var group, isDown, origX, origY;\n\n        var temp_id = new fabric.Text(this.id.toString(), {\n            fontSize: 20,\n            top: this.top,\n            left: this.left,\n            uniScaleTransform: false,\n          });\n\n        canvas.on('mouse:down', function(o){\n            isDown = true;\n            var pointer = canvas.getPointer(o.e);\n            origX = pointer.x;\n            origY = pointer.y;\n            var pointer = canvas.getPointer(o.e);\n            var rect_temp = new fabric.Rect({\n                left: origX,\n                top: origY,\n                originX: 'left',\n                originY: 'top',\n                width: pointer.x-origX,\n                height: pointer.y-origY,\n                angle: 0,\n                fill: 'rgba(255,0,0,0.5)',\n                transparentCorners: false,\n                uniScaleTransform: true\n            });\n            group = rect_temp\n\n\n            canvas.add(group)\n        });\n        \n        canvas.on('mouse:move', function(o){\n            if (!isDown) return;\n            var pointer = canvas.getPointer(o.e);\n            \n            if(origX>pointer.x){\n                group.set({ left: Math.abs(pointer.x) });\n            }\n            if(origY>pointer.y){\n                group.set({ top: Math.abs(pointer.y) });\n            }\n            \n            group.set({ width: Math.abs(origX - pointer.x) });\n            group.set({ height: Math.abs(origY - pointer.y) });\n            \n            \n            canvas.renderAll();\n        });\n        \n        canvas.on('mouse:up', function(o){\n          isDown = false;\n          canvas.off('mouse:down')\n          canvas.off('mouse:up')\n        });\n    }\n\n}\n\nexport {BoundingBox}","import {BoundingBox} from '../annotations/bounding_box'\nconst fabric = require(\"fabric\").fabric;\nconst $ = require(\"jquery\")\n\nexport default class ExtractingAnnotation{\n    constructor(annotation_json, width, height){\n        this.frame_data = annotation_json['annotations']\n        this.annotation_data = annotation_json['behavior_data']\n        this.width = width\n        this.height = height\n        this.metadata = annotation_json['vid_metadata']\n    }\n\n    get_frame_data(){\n        return this.scale_annotations()\n    }\n\n    get_frame_rate(){\n        try{\n            return this.metadata['frame_rate']\n        }catch (error){\n            return 1\n        }\n    }\n    \n    get_annotation_data(){\n        return this.annotation_data;\n    }\n\n    find_highest_localid(){\n        var localid = []\n        for(var i = 0; i < this.annotation_data.length; i++){\n            for(var j = 0; j < this.annotation_data[i].length; j++){\n                localid.push(parseInt(this.annotation_data[i][j]['id'].replace(/\\D/g, \"\")))\n            }\n        }\n        return Math.max(...localid)+1\n    }\n\n    scale_annotations(){\n        var new_annotations = []\n        for(var i = 0; i < this.frame_data.length; i++){\n            var temp_data = []\n            var curr_frame = this.frame_data[i]\n            if(curr_frame == null){\n                new_annotations.push([])\n                continue;\n            }\n            for(var j = 0; j < curr_frame.length; j++){\n                if(curr_frame[j]['type'] === \"bounding_box\"){\n                    var x = (parseInt(curr_frame[j]['x']) / parseInt(this.metadata['horizontal_res']) * this.width) \n                    var y = (curr_frame[j]['y'] / this.metadata['vertical_res'] * this.height)\n                    var width = ((curr_frame[j]['width']) / this.metadata['horizontal_res'] * this.width)\n                    var height = ((curr_frame[j]['height']) / this.metadata['vertical_res'] * this.height)\n\n                    var color = \"#\" + ((1<<24)*Math.random() | 0).toString(16)\n                    var new_bbox = new BoundingBox(y, x, width, height, color, curr_frame[j]['local_id'], \"None\").generate_no_behavior(this)\n                    //this.add(new_bbox)\n                    new_bbox.local_id = curr_frame[j]['local_id']\n                    temp_data.push(new_bbox)\n                }else if(curr_frame[j]['type'] === \"segmentation\"){\n                    var points = []\n                    var curr_points = curr_frame[j]['points']\n                    for(var k = 0; k < curr_points.length; k++){\n                        var x_scaled = (parseInt(curr_points[k]['x']) / parseInt(this.metadata['horizontal_res']) * this.width)\n                        var y_scaled = (curr_points[k]['y'] / this.metadata['vertical_res'] * this.height)\n                        points.push({x: x_scaled, y: y_scaled})\n                    }\n                    var po = new fabric.Polygon(points, {\n                        strokeWidth: 1,\n                        stroke: 'green',\n                        opacity: .5,\n                        scaleX: 1,\n                        scaleY: 1,\n                        objectCaching: false,\n                        transparentCorners: false,\n                        cornerColor: 'blue',\n                        originX: 'center',\n                        originY: 'center'\n                    });\n                    var display_text = new fabric.Text(curr_frame[j]['local_id'], {\n                        fontSize: 20,\n                        centerX: \"center\",\n                        top: points[0].y,\n                        left: points[0].x, \n                        uniScaleTransform: false,\n                        fill: \"white\",\n                    })\n                    var grouppo = new fabric.Group([po, display_text], {perPixelTargetFind: true})\n                    grouppo.lockMovementY = true;\n                    grouppo.lockMovementX = true;\n                    grouppo.selectable = false;\n                    grouppo.local_id = curr_frame[j]['local_id']\n                    //this.add(grouppo)\n                    temp_data.push(grouppo)\n                }\n            }\n            new_annotations.push(temp_data)\n        }\n        return new_annotations\n    }\n}\n\n//This is the parser for the Multi-Camera pig tracking output JSON code. \n/*\nclass MCPT_Processing {\n    constructor(annotation_json){\n        this.objects = annotation_json['objects']\n    }\n\n    getObjects_MCPT() {\n        return this.objects\n    }\n\n    getObjectById_MCPT(id) {\n        return this.objects[id]\n    }\n    \n    getObjectByIdFrame(id, frame_num){\n        return this.objects[id][frame_num]\n    }\n\n    getAllObjectByFrame_MCPT(frame_num){\n        var i;\n        var objects_frame = []\n        for (i = 0; i < this.objects.length; i++){\n            var curr_obj = this.objects[i]\n            if(curr_obj['frames'][curr_obj['frames'].length-1]['frameNumber'] < frame_num){\n                continue;\n            }\n            var curr_obj_frames = curr_obj['frames'];\n            for (var j = 0; j < curr_obj_frames.length; j++){\n                if(curr_obj_frames[j]['frameNumber'] === frame_num){\n                    objects_frame.push(curr_obj_frames[j]);\n                    break;\n                }\n            }\n        }\n        return objects_frame;\n    }\n}*/","const behaviors = [{\n  value: 'Feeding',\n  label: 'Feeding'\n},{\n  value: 'Drinking',\n  label: 'Drinking'\n},{\n  value: 'Exploratory',\n  label: 'Exploratory'\n},{\n  value: 'Social',\n  label: 'Social'\n},{\n  value: 'Locomotion',\n  label: 'Locomotion'\n},{\n  value: 'Proximity',\n  label: 'Proximity'\n},{\n  value: 'Others',\n  label: 'Others'\n}]\n\nexport {behaviors};\n","const posture = [{\n  value: 'Lying',\n  label: 'Lying'\n},{\n  value: 'Sitting',\n  label: 'Sitting'\n},{\n  value: 'Kneeling',\n  label: 'Kneeling'\n},{\n  value: 'Standing',\n  label: 'Standing'\n}]\n\n  export {posture}","const confidence = [{\n    value: 'No occlusion',\n    label: 'No occlusion'\n  },{\n    value: 'Minor occlusion',\n    label: 'Minor occlusion'\n  },{\n    value: 'Split occlusion',\n    label: 'Split occlusion'\n  },{\n    value: 'End occlusion',\n    label: 'End occlusion'\n  },{\n    value: 'Critical occlusion',\n    label: 'Critical occlusion'\n  }\n]\nexport {confidence};\n","import React from \"react\"; \nimport { Type } from 'react-bootstrap-table2-editor';\nimport {behaviors} from './behaviors'\nimport {posture} from './posture'\nimport {status} from './status'\nimport {confidence} from './confidence'\nimport Button from 'react-bootstrap/Button'\n\nconst columns = (remove_table_index) => [{\n  dataField: \"id\",\n  text: \"ID\",\n  headerStyle: () => { return { width: \"40px\", left: 0 }; },\n  editable: false,\n},{\n  dataField: \"global_id\",\n  text: \"Glo\",\n  headerStyle: () => { return { width: \"70px\", left: 0}; }\n},{\n  dataField: \"posture\",\n  text: \"Posture\",\n  editor: {\n      type: Type.SELECT,\n      options: posture,\n  }\n},\n{\n  dataField: \"behavior\",\n  text: \"Behavior\",\n  editor: {\n      type: Type.SELECT,\n      options: behaviors,\n  }\n},{\n  dataField: \"confidence\",\n  text: \"Confidence\",\n  editor: {\n      type: Type.SELECT,\n      options: confidence,\n  }\n},{\n  dataField: \"remove\",\n  text: \"Del\",\n  editable: false,\n  headerStyle: () => { return { width: \"50px\", left: 0}; },\n  headerFormatter: () => {return (\n    <div>\n      Del\n      <Button\n        className=\"btn btn-danger btn-xs\"\n        onClick={() => remove_table_index()}\n        label=\"Del\"\n      >\n      </Button>\n    </div>\n  );},\n  formatter: (cellContent, row) => {\n    return (\n      <div>        \n        <Button\n          className=\"btn btn-danger btn-xs\"\n            onClick={() => remove_table_index(row.id)}\n            label=\"Del\"\n          >\n        </Button>\n      </div>\n    );\n  },\n}\n]\nexport {columns}\n \n","import React from \"react\"; \n\nexport default function Instructions(){\n    return (\n        <div>\n        <h1 id=\"instructions-for-using-the-avat-platform\">Instructions for Using the AVAT Platform</h1>\n        <p>The AVAT platform is designed to be accessible for users across various academic disciplines, providing a robust interface for efficient video annotation. This document outlines the key features of the platform, including user interface details, key bindings, and the process for uploading media and annotating videos.</p>\n        <p>For a system that spans multiple academic disciplines, ensuring a robust interface allows a person of any experience to efficiently annotate videos. A potential user should be able to identify animals of interest easily and have a method to track them across frames in an easy and efficient manner. For a more efficient workflow, a series of key bindings was implemented to expedite each operation within the platform, therefore allowing unexperienced users to familiarize themselves with a predetermined workflow efficiently.</p>\n        <h2 id=\"overview\">Overview</h2>\n        <p>AVAT aims to simplify the video annotation process, allowing users to easily identify and track animals of interest across frames. A significant challenge addressed was conditioning users to adopt a predetermined workflow for increased efficiency, even without prior intensive training on our system.</p>\n        <h2 id=\"browser-support\">Browser Support</h2>\n        <p>The following browsers are supported by the AVAT platform. If you encounter any errors, we recommend using the latest version of Chrome or Firefox, as these have been extensively tested:</p>\n        <ul>\n        <li>Chrome 49 (release: 2/3/2016)</li>\n        <li>Firefox 50 (release: 11/15/2016)</li>\n        <li>Safari 10 (release: 9/20/2016)</li>\n        <li>Edge 14 (release: 2/18/2016)</li>\n        </ul>\n        <h2 id=\"direct-access-recommended-\">Direct Access (Recommended)</h2>\n        <p>Access AVAT via <a href=\"https://aifarms.github.io/AVAT/\">https://aifarms.github.io/AVAT/</a>.</p>\n        <h2 id=\"local-deployment-frontend-\">Local Deployment (Frontend)</h2>\n        <p>These instructions will help you set up a local copy of the project for development and testing purposes.</p>\n        <h3 id=\"prerequisites\">Prerequisites</h3>\n        <p>You will need to have npm, firefox/chrome, and git installed on your system.</p>\n        <h3 id=\"installing-and-building\">Installing and Building</h3>\n        <ol>\n        <li>Clone the repository to your desired location:\n        ```bash\n        git clone <a href=\"https://github.com/AIFARMS/AVAT\">https://github.com/AIFARMS/AVAT</a></li>\n        <li>Install the required node_modules:\n        ```bash\n        npm install</li>\n        <li>Start the project locally. The website will be accessible at <a href=\"http://localhost:4000/\">http://localhost:4000/</a>. This command starts the front-end portion of the dashboard:\n        ```bash\n        npm start</li>\n        <li>To simply access the website, navigate to the build folder and open <code>index.html</code>.</li>\n        </ol>\n        <h2 id=\"key-bindings\">Key Bindings</h2>\n        <p>The platform has a series of built in key binds that allow the user to employ different sampling strategies. Skipping through frames is accomplished with “e” for forward and “q” for backward, while “w” toggles the pause/play function. The “c” key is particularly useful for copying the previous annotation, thereby reducing repetitive tasks when annotating sequences with minimal changes. The “f” key is used to toggle the scrub mode, which is activated by default to allow for quick navigation through the video timeline.</p>\n        <ul>\n        <li><code>e</code>: Skip forward to the next frame.</li>\n        <li><code>q</code>: Skip backward to the previous frame.</li>\n        <li><code>w</code>: Toggle pause/play for the video.</li>\n        <li><code>c</code>: Copy the previous annotation, useful for sequences with minimal changes.</li>\n        <li><code>f</code>: Toggle scrub mode for quick video timeline navigation.</li>\n        <li><code>a</code>: Add a new annotation.</li>\n        <li><code>r</code>: Remove the selected annotation.</li>\n        </ul>\n        <h2 id=\"user-interface\">User Interface</h2>\n        <h3 id=\"video-playback-and-annotation-area\">Video Playback and Annotation Area</h3>\n        <ul>\n        <li>The user interface of the AVAT platform is divided into two main sections. The left section features the video playback area, where the media is displayed for annotation. This primary area is designed for clear visibility and interaction with the video content. On the right side of the video playback area, there is a structured annotation table. This table is organized to display a list of annotations corresponding to the video frames. Each entry in the table is associated with a specific annotation created within the video playback area. The table columns include details such as the local ID , the global ID(Glo), and descriptors such as posture, behavior, and a confidence score. There is also a deletion option (Del) for removing annotations as needed. The “Previous” tab allows users to visualize annotations from the previous frames. Above the video playback area, there is a navigation bar with options such as “Export” and “Instructions”, which contains functionality for data export and accessing user guidelines. The top right corner includes a frame indicator, showing the current frame out of the total number of frames, and playback control buttons like “Prev” for previous frame, “Play” for starting the video, and “Next” for advancing to the next frame of interest. On the right side of the navigation bar, there is an “Add” button, indicating a quick action to insert new annotations.</li>\n        </ul>\n        <h3 id=\"navigation-and-functionality\">Navigation and Functionality</h3>\n        <ul>\n        <li>Above the video playback area, a navigation bar includes options for data export and accessing guidelines through the “Export” and “Instructions” tabs.</li>\n        <li>A frame indicator in the top right corner displays the current frame number.</li>\n        <li>Playback control buttons include “Prev” for the previous frame, “Play” for starting the video, and “Next” for advancing to the next frame.</li>\n        <li>An “Add” button allows for quick insertion of new annotations.</li>\n        </ul>\n        <h2 id=\"media-upload-and-initialization\">Media Upload and Initialization</h2>\n        <h3 id=\"uploading-videos\">Uploading Videos</h3>\n        <ol>\n        <li>Access the “Upload” tab to start.</li>\n        <li>Select the media type to be annotated from the Format dropdown.</li>\n        <li>Specify the number of video streams in the “Stream Number” field.</li>\n        <li>Click “Browse” next to “Video Upload” and choose the file from the local directory.</li>\n        <li>Pre-defined ethogram labels or existing annotations can be uploaded using the “Column Upload” and “Annotation Upload” buttons.</li>\n        <li>Ensure the “Frame Rate” matches the video’s frame rate.</li>\n        <li>Set the “Skip Value” to determine the frame sampling interval.</li>\n        <li>Click “Upload” to process and display the first frame, indicating readiness for annotation.</li>\n        </ol>\n        <h3 id=\"uploading-images\">Uploading Images</h3>\n        <ul>\n        <li>Ensure images are in a 16:9 aspect ratio for optimal performance.</li>\n        </ul>\n        <h3 id=\"initialization-workflow\">Initialization workflow</h3>\n        <ul>\n        <li>Initiating the annotation platform starts with accessing the “Upload” tab. First, users select the type of media Format dropdown to denote the type of media to be annotated. Then, they specify the number of video streams for upload in the “Stream Number” field, inputting “1” for a single video. Users upload their video by clicking “Browse” next to “Video Upload” and choosing the file from their local directory. If there are pre-defined ethogram labels or existing annotations, these can be uploaded using the “Column Upload” and “Annotation Upload” buttons, respectively. The “Frame Rate” field should match the video’s frame rate to synchronize the annotations with the video. The “Skip Value” determines the frame sampling interval. A default value of “1” means every frame will be sampled; a higher value will skip frames and reduce the sampling frequency. After selecting the files and setting the parameters, users click the “Upload” button to start the upload process. The platform processes the videos or images, and upon completion, the first frame of the video is displayed in the playback area, indicating readiness to begin annotation work. This process is designed to be simple and efficient, ensuring users can quickly start annotating their videos with minimal setup.</li>\n        </ul>\n        <h2 id=\"annotation-types-and-process\">Annotation Types and Process</h2>\n        <ul>\n        <li><strong>Behavior Annotation</strong>: For labeling behaviors or postures. Keybinds: <code>1</code> and <code>a</code>.</li>\n        <li><strong>Bounding Box and Segmentation</strong>: For bounding boxes, users click and drag the mouse to draw a rectangle around the object of interest. Resizing is easily done by dragging the small squares at the corners of the bounding box. Each box is automatically assigned a number which links it to a corresponding entry in the table on the interface for easy tracking. For segmentation, users click to place points on the periphery of the object, which are then joined to form a polygon. Clicking on the first point closes and completes the shape. Should adjustments be required, selecting “Edit Segmentation” enables the editing mode, allowing users to move existing points for precise placement.</li>\n        <li><strong>Upload a custom ethogram</strong>: To incorporate existing ethogram labels into the annotation process, users must modify the template file named data_column.json. This file acts as a template for the ethogram and posture labels within the system. Users can add or remove labels by editing this JSON file, which allows the system to display the customized ethogram for annotators. This step is essential for ensuring that behavior scoring and annotation processes align with the specific ethogram developed for the study.</li>\n        </ul>\n        <h2 id=\"customizing-the-ethogram-with-data_column-json-\">Customizing the Ethogram with <code>data_column.json</code></h2>\n        <p>To tailor the AVAT platform&#39;s annotation system to your study&#39;s specific needs, you&#39;ll need to modify the <code>data_column.json</code> template. This file dictates the structure of the annotation table and the options available in dropdown menus for annotating videos. Follow the steps below to customize this file.</p>\n        <h3 id=\"step-1-accessing-the-template\">Step 1: Accessing the Template</h3>\n        <p>The template can be found at the AVAT GitHub repository: <a href=\"https://github.com/AIFARMS/AVAT/data_column.json\">data_column.json</a>. Download or view this file to begin customization.</p>\n        <h3 id=\"step-2-understanding-the-file-structure\">Step 2: Understanding the File Structure</h3>\n        <p>The <code>data_column.json</code> consists of two primary sections:</p>\n        <ul>\n        <li><code>columns</code>: Defines the headers and accessors for data columns in the annotation interface.</li>\n        <li><code>select_data</code>: Specifies options for dropdown menus in the annotation tool, such as confidence levels, behaviors, and postures.</li>\n        </ul>\n        <h3 id=\"step-3-editing-the-file\">Step 3: Editing the File</h3>\n        <h2 id=\"annotation-workflow\">Annotation Workflow</h2>\n        <ol>\n        <li><p><strong>Preparation</strong></p>\n        <ul>\n        <li>Before starting, ensure that your media files are ready for upload. This includes having videos in supported formats and images, if applicable, prepared in a 16:9 aspect ratio <code>.mp4</code> to ensure maximum compatibility with the AVAT platform.</li>\n        </ul>\n        </li>\n        <li><p><strong>Uploading Media</strong></p>\n        <ul>\n        <li>Navigate to the “Upload” tab on the platform&#39;s interface.</li>\n        <li>For videos, select the type of media to be annotated from the Format dropdown menu. Specify the number of video streams for upload in the “Stream Number” field.</li>\n        <li>Click “Browse” next to “Video Upload” and select the file from your local directory. If you have predefined ethogram labels or existing annotations, use the “Column Upload” and “Annotation Upload” buttons to upload these files.</li>\n        <li>Ensure the “Frame Rate” field matches the video’s frame rate for synchronization. Adjust the “Skip Value” to set the frame sampling interval according to your needs.</li>\n        <li>Click “Upload” to initiate the processing of the videos or images. Once complete, the first frame of the video will be displayed in the playback area, indicating readiness for annotation.</li>\n        </ul>\n        </li>\n        <li><p><strong>Starting the Annotation Process</strong></p>\n        <ul>\n        <li>Begin annotating the video by using the key binds to navigate through frames and manage annotations. You can switch between different annotation modes (e.g., behavior annotation, bounding box) as needed to accurately label the video content.</li>\n        <li>For behavior annotations, use the <code>1</code> and <code>a</code> keys to add labels for behaviors or postures that don&#39;t have visual attributes.</li>\n        <li>To create bounding boxes around objects of interest, switch to the bounding box mode with the <code>2</code> key and use the <code>a</code> key to add a new bounding box. Resize and position the box using your mouse, ensuring it accurately encompasses the object.</li>\n        </ul>\n        </li>\n        <li><p><strong>Reviewing and Adjusting Annotations</strong></p>\n        <ul>\n        <li>Periodically review your annotations to ensure accuracy and completeness. Use the navigation controls and key bindings to revisit previous frames and adjust annotations as necessary.</li>\n        <li>If you need to remove or edit an annotation, utilize the corresponding key bindings (<code>r</code> for removal, <code>e</code> and <code>q</code> for navigation) and mouse actions to make precise adjustments.</li>\n        </ul>\n        </li>\n        <li><p><strong>Exporting Annotated Data</strong></p>\n        <ul>\n        <li>Once you have completed the annotation process, you can export your annotated data for further analysis or sharing with your team. Use the &quot;Export&quot; option in the navigation bar to save your work in the desired format.</li>\n        </ul>\n        </li>\n        </ol>\n        <h2 id=\"sampling-rate\">Sampling rate</h2>\n        <p>Ensure video frame rates are accurately inputted for synchronization. Adjust sampling values as needed for your project&#39;s requirements. \n        Given that manually labeling every image or frame of a video is an inefficient process, our system adopts an approach that requires users to annotate a sparse set of frames, also referred to as the sampling rate. The sampling rate is dependent on the research question, and we recommend two sampling rate methods: static sampling and dynamic sampling. </p>\n        <p><code>Static sampling</code> is a simple strategy that aims to annotate animals on a static interval where the N intermediate frames are skipped. This strategy is perfect for videos where an set of ethogram labels has already been specified as the user is not looking out for odd or new behaviors that might occur. \n        For videos that have a lot of movement, we set N to be low, whereas, for videos that have small amounts of movement, we can set N to be higher. As such, the primary goal of the user is to minimize N such that key elements of the video are not left out by the skipped frames. Having N too low will result in the user wasting time annotating frames that could easily be interpolated and having a high N will result in key frames being skipped causing the user to comb through the individual frames manually, wasting time. \n        Assuming a suitable ethogram is provided, one can determine the N as the minimum time t it takes for a single event to happen between frames. Specifically, N would be set relative to the activity level of the animals in the video. For example, if the animals were extremely active and engaging in lots of social behaviors through the course of the video, N would be set low as it helps capture nuanced behaviors that would be missed with a high N. Likewise, if the animals were docile and not social, N would set high since not much activity would have happened between frames and the ethogram would only track behaviors that occur through the course of several frames.\n        Functionally, static sampling involves asking the user for N. This value should be set at the start and should be manually set by the user at all times. We recommend a default value of 1 frame per second of video as a baseline N value. </p>\n        <p><code>Dynamic sampling</code> is a strategy that aims to annotate animals for use in the creation of an ethogram. This strategy allows the user to decide when to annotate based on the happenings in the video. This allows the collection of new behaviors and adds the ability for the user to add notes about what is occurring for help in ethogram development. Since the choice of which frames to annotate is on the user, it adds variance in the results and time were taken to complete annotations. For a trained annotator, using dynamic sampling is beneficial since it allows for frames that are not of interest to be skipped in favor of more data-rich frames. However, this sampling strategy requires a seasoned annotator. Unskilled annotators are likely to be less efficient while employing a dynamic sampling strategy since they are not aware of which frames contain the most important features. We recommend using this strategy only if the user is a trained annotator. Functionally, dynamic sampling is implemented by a pause/play option and the ability to scrub through the video. Adding functionality such as playback speed significantly helps the user as they are able to skip through the irrelevant frames with ease. Allowing the user to control the frame level is key as some frames might have changes in between single frames. \n        The platform has a series of built in keybinds that allow the user to employ different sampling strategies. Skipping through frames is accomplished with “e” for forward and “q” for backward, while “w” toggles the pause/play function. The “c” key is particularly useful for copying the previous annotation, thereby reducing repetitive tasks when annotating sequences with minimal changes. The “f” key is used to toggle the scrub mode, which is activated by default to allow for quick navigation through the video timeline.</p>\n        <h2 id=\"troubleshooting-and-feedback\">Troubleshooting and Feedback</h2>\n        <p>For any issues or feedback, please use the &quot;Report&quot; button in the top toolbar to submit a detailed report.</p>\n\n        </div>\n    )\n}","import {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {data: []}\n\nconst frameDataSlice = createSlice({\n    name: 'frame_data',\n    initialState,\n    reducers:{\n        init(state, payload){\n            var data = [];\n            for(var i = 0; i < payload.payload; i++){\n                data.push([]);\n            }\n            state.data = data;\n        },\n        initOldAnnotation(state, payload){\n            state.data = payload.payload\n        },\n        modifyFrame(state, payload){\n            var temp = state.data\n            temp[payload.payload.currentFrame] = payload.payload.data\n            state.data = temp\n        },\n        middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n            serializableCheck: false\n        })\n    }\n})\n\nexport const {init, modifyFrame} = frameDataSlice.actions\nexport default frameDataSlice.reducer\n","import {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {data: []}\n\nconst annotationDataSlice = createSlice({\n    name: 'annotation_data',\n    initialState,\n    reducers:{\n        init(state, payload){\n            console.log(payload.payload)\n            var data = [];\n            for(var i = 0; i < payload.payload; i++){\n                data.push([]);\n            }\n            state.data = data;\n        },\n        initOldAnnotation(state, payload){\n            state.data = payload.payload\n        },\n        modifyFrame(state, payload){\n            var temp = state.data\n            temp[payload.payload.currentFrame] = payload.payload.data\n            state.data = temp\n        },\n        middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n            serializableCheck: false\n        })\n    }\n})\n\nexport const {init, modifyFrame} = annotationDataSlice.actions\nexport default annotationDataSlice.reducer","import {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {data: undefined}\n\nconst columnDataSlice = createSlice({\n    name: 'column_annot',\n    initialState,\n    reducers:{\n        init(state, payload){\n            console.log(payload.payload.data)\n            state.data = payload.payload.data\n        },\n        middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n            serializableCheck: false\n        })\n    }\n})\n\nexport const {init} = columnDataSlice.actions\nexport default columnDataSlice.reducer","import {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {data: undefined}\n\nconst currFrameDataSlice = createSlice({\n    name: 'current_frame',\n    initialState,\n    reducers:{\n        init(state, payload){\n            console.log(payload.payload.data)\n            state.data = payload.payload.data\n        },\n        changeFrame(state, payload){\n            state.data = payload.payload.data\n        },\n        middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n            serializableCheck: false\n        })\n    }\n})\n\nexport const {init} = currFrameDataSlice.actions\nexport default currFrameDataSlice.reducer","import {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {data: []}\n\nconst mediaDataSlice = createSlice({\n    name: 'media_data',\n    initialState,\nreducers:{\n        init(state, payload){\n            var data = [];\n            for(var i = 0; i < payload.payload; i++){\n                data.push([]);\n            }\n            state.data = data;\n        },\n        addMedia(state, payload){\n            var temp = state.data\n            var media = payload.payload.media\n            temp[payload.payload.stream_num] = media\n            state.data = temp\n        },\n        middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n            serializableCheck: false\n        })\n    }\n})\n\nexport const {init, modifyFrame} = mediaDataSlice.actions\nexport default mediaDataSlice.reducer","import store from '../store'\n\n/*\nAction functions for frame_data\n*/\nfunction initFrameData(frame_count){\n\tstore.dispatch({\n\t\ttype: \"frame_data/init\",\n\t\tpayload: frame_count\n\t})\n}\nfunction updateFrameData(frame_number, data){\n\tstore.dispatch({\n\t\ttype: \"frame_data/modifyFrame\",\n\t\tpayload: {currentFrame: frame_number, data: data}\n\t})\n}\nfunction getFrameData(frame_number){\n\tconsole.log(store.getState())\n\treturn JSON.parse(JSON.stringify(store.getState().frame_data.data[frame_number]))\n} \n\n/*\nAction functions for annotation_data\n*/\nfunction initAnnotationData(frame_count){\n    store.dispatch({\n\t\ttype: \"annotation_data/init\",\n\t\tpayload: frame_count\n\t})\n}\nfunction updateAnnotationData(frame_number, data){\n    store.dispatch({\n\t\ttype: \"annotation_data/modifyFrame\",\n\t\tpayload: {currentFrame: frame_number, data: data}\n\t})\n}\nfunction getAnnotationData(frame_number){\n    return JSON.parse(JSON.stringify(store.getState().annotation_data.data[frame_number]))\n}\n\n/*\nAction functions for column uploading\n*/\nfunction initColumnData(column_dat){\n\tstore.dispatch({\n\t\ttype: \"column_annot/init\",\n\t\tpayload: {data: column_dat}\n\t})\n}\n\nfunction getColumnData(){\n\treturn JSON.parse(JSON.stringify(store.getState().column_annot))\n}\n\nfunction initCurrentFrame(frame_num){\n\tstore.dispatch({\n\t\ttype: \"current_frame/init\",\n\t\tpayload: {data: frame_num}\n\t})\n}\n\nfunction getCurrentFrame(){\n\treturn JSON.parse(JSON.stringify(store.getState().current_frame))['data']\n}\n\nfunction setCurrentFrame(frame_num){\n\tstore.dispatch({\n\t\ttype: \"current_frame/changeFrame\",\n\t\tpayload: {data: frame_num}\n\t})\n}\n\nfunction initMedia(num_streams){\n\tstore.dispatch({\n\t\ttype: \"media_data/init\",\n\t\tpayload: num_streams\n\t})\n}\n\nfunction setMedia(stream_num, media){\n\tstore.dispatch({\n\t\ttype: \"media_data/addMedia\",\n\t\tpayload: {stream_num: stream_num, media: media}\n\t})\n}\n\nfunction initMetadata(horizontal_res, vertical_res, frame_rate, media_type, total_frames){\n\tstore.dispatch({\n\t\ttype: \"metadata/init\",\n\t\tpayload: {horizontal_res: horizontal_res, vertical_res: vertical_res, frame_rate: frame_rate, media_type: media_type, total_frames: total_frames}\n\t})\n}\n\nfunction setRes(horizontal_res, vertical_res){\n\tstore.dispatch({\n\t\ttype: \"metadata/setRes\",\n\t\tpayload: {horizontal_res: horizontal_res, vertical_res: vertical_res}\n\t})\n}\n\nfunction setFrameRate(frame_rate){\n\tstore.dispatch({\n\t\ttype: \"metadata/setFrameRate\",\n\t\tpayload: {frame_rate: frame_rate}\n\t})\n}\n\nfunction setMediaType(media_type){\n\tstore.dispatch({\n\t\ttype: \"metadata/setMediaType\",\n\t\tpayload: {media_type: media_type}\n\t})\n}\n\nfunction setTotalFrames(total_frames){\n\tstore.dispatch({\n\t\ttype: \"metadata/setTotalFrames\",\n\t\tpayload: {total_frames: total_frames}\n\t})\n}\n\nfunction setSkipValue(skip_val){\n\tstore.dispatch({\n\t\ttype: \"metadata/setSkipValue\",\n\t\tpayload: {skip_value: skip_val}\n\t})\n}\n\nfunction getMetaData(){\n\treturn JSON.parse(JSON.stringify(store.getState().metadata))\n}\n\nfunction togglePlay(){\n\tstore.dispatch({\n\t\ttype:  \"play_status/togglePlay\",\n\t\tpayload: {}\n\t})\n}\n\nfunction initPlay(){\n\tstore.dispatch({\n\t\ttype:  \"play_status/init\",\n\t\tpayload: {}\n\t})\n}\n\nexport {initFrameData, \n\t\tupdateFrameData, \n\t\tgetFrameData, \n\t\tinitAnnotationData, \n\t\tupdateAnnotationData, \n\t\tgetAnnotationData, \n\t\tinitColumnData, \n\t\tgetColumnData,\n\t\tinitCurrentFrame,\n\t\tgetCurrentFrame,\n\t\tsetCurrentFrame,\n\t\tinitMedia,\n\t\tsetMedia, \n\t\tinitMetadata,\n\t\tsetRes, \n\t\tsetFrameRate,\n\t\tsetMediaType,\n\t\tsetTotalFrames,\n\t\tsetSkipValue,\n\t\tgetMetaData,\n\t\ttogglePlay,\n\t\tinitPlay\n\t}\n","import {createSlice} from '@reduxjs/toolkit'\nimport {initFrameData, updateFrameData, getFrameData, initAnnotationData, updateAnnotationData, getAnnotationData, initColumnData, setMedia, initMedia} from '../processing/actions'\n\n\nconst initialState = {horizontal_res: 0, vertical_res: 0, frame_rate: 1, media_type: \"in_video\", total_frames: 0, skip_value: null}\n\nconst metadataSlice = createSlice({\n    name: 'metadata',\n    initialState,\n    reducers:{\n        init(state, payload){\n            state.horizontal_res = payload.payload.horizontal_res\n            state.vertical_res = payload.payload.vertical_res\n            state.frame_rate = payload.payload.frame_rate\n            state.media_type = payload.payload.media_type\n            state.total_frames = payload.payload.total_frames\n        },\n        setRes(state, payload){\n            state.horizontal_res = payload.payload.horizontal_res\n            state.vertical_res = payload.payload.vertical_res\n        },\n        setFrameRate(state, payload){\n\t        // When the frame rate is changed, we first calculate the current frame rate and then multiply the total frames by the ratio of the new frame rate to the old frame rate\n            if (state.media_type != \"in_image\") { // only for videos\n                // var curr_framerate =  JSON.parse(JSON.stringify(state))['frame_rate']\n                // state.total_frames = state.total_frames / curr_framerate\n                // state.total_frames = state.total_frames * payload.payload.frame_rate\n                state.frame_rate = payload.payload.frame_rate\n            }\n        },\n        setMediaType(state, payload){\n            state.media_type = payload.payload.media_type\n        },\n        setTotalFrames(state, payload){\n            state.total_frames = payload.payload.total_frames\n        },\n        setSkipValue(state, payload){\n            state.skip_value = payload.payload.skip_value\n        },\n        middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n            serializableCheck: false\n        })\n    }\n})\n\nexport const {init, setRes, setFrameRate, setMediaType, setTotalFrames, setSkipValue} = metadataSlice.actions\nexport default metadataSlice.reducer\n","import {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {play: false}\n\nconst playStatusSlice = createSlice({\n    name: 'play_status',\n    initialState,\n    reducers:{\n        init(state, payload){\n            state.play = false;\n        },\n        togglePlay(state, payload){\n            state.play = !state.play\n        },\n        middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n            serializableCheck: false\n        })\n    }\n})\n\nexport const {init, togglePlay} = playStatusSlice.actions\nexport default playStatusSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport frameDataSlice from './reducer/frame_data'\nimport annotationDataSlice from './reducer/annotation_data'\nimport columnDataSlice from './reducer/column_annot'\nimport currFrameDataSlice from './reducer/current_frame'\nimport mediaDataSlice from './reducer/media_data'\nimport metadataSlice from './reducer/metadata'\nimport playStatusSlice from './reducer/play_status'\n\nexport default configureStore({\n  reducer: {\n    frame_data: frameDataSlice,\n    annotation_data: annotationDataSlice,\n    column_annot: columnDataSlice,\n    current_frame: currFrameDataSlice,\n    media_data: mediaDataSlice,\n    metadata: metadataSlice,\n    play_status: playStatusSlice,\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n})\n","export default class ExportingAnnotation{\n    constructor(annotation_data, width, height, VIDEO_METADATA, image_data){\n        console.log(width)\n        console.log(height)\n        this.frame_data = annotation_data\n        this.width = width\n        this.height = height\n        this.metadata = VIDEO_METADATA\n        this.image_data = image_data\n    }\n\n    get_frame_json(){\n        var standard_annot = new Array(this.frame_data.length)\n        console.log(this.metadata)\n        console.log(this.frame_data)\n        for(var i = 0; i < this.frame_data.length; i++){\n            var curr = []\n            if(this.frame_data[i] == []){\n                console.log(\"Exporting error\")\n                continue;\n            }\n            var frame_objects = this.frame_data[i]\n            if(frame_objects == undefined){\n                console.log(\"Exporting error\")\n                continue;\n            }\n            \n            for(var j = 0; j < frame_objects.length; j++){\n                try {\n                    console.log(frame_objects[j])\n                    if(frame_objects[j] == undefined || frame_objects[j]['type'] !== \"group\"){\n                        continue;\n                    }\n                    if (frame_objects[j]._objects == undefined){\n                        continue;\n                    }\n                    if(frame_objects[j]._objects[0]['type'] === \"rect\"){\n                        console.log(frame_objects[j])\n                        var x = (frame_objects[j]['left'] / this.width) * this.metadata['horizontal_res']\n                        var y = (frame_objects[j]['top'] / this.height) * this.metadata['vertical_res']\n                        var width = ((frame_objects[j]['width'] * frame_objects[j]['scaleX']) / this.width) * this.metadata['horizontal_res']\n                        var height = ((frame_objects[j]['height'] * frame_objects[j]['scaleY']) / this.height )* this.metadata['vertical_res']\n                        var local_id = frame_objects[j]._objects[1]['text']\n                        if(this.metadata.media_type == \"in_image\"){\n                            curr.push({\"type\": \"bounding_box\",\"x\": x, \"y\": y, \"width\": width, \"height\": height, \"local_id\": local_id,\"fileName:\": this.image_data[i]['name'], \"dataType\": \"image\"})\n                        }else{\n                            curr.push({\"type\": \"bounding_box\",\"x\": x, \"y\": y, \"width\": width, \"height\": height, \"local_id\": local_id, \"fileName:\": this.metadata['name'], \"dataType\": \"video\"})\n                        }\n                        //curr.push({\"type\": \"bounding_box\",\"x\": x, \"y\": y, \"width\": width, \"height\": height, \"local_id\": local_id})\n                    }else if (frame_objects[j]._objects[0]['type'] === \"polygon\"){\n                        var raw_points = frame_objects[j]._objects[0]['points']\n                        var points = []\n                        console.log(this.metadata)\n                        console.log(this.metadata['horizontal_res'])\n                        console.log(this.width)\n                        console.log(this.height)\n                        for(var k = 0; k < raw_points.length; k++){\n                            var x = (raw_points[k]['x'] / this.width) * this.metadata['horizontal_res']\n                            var y = (raw_points[k]['y'] / this.height) * this.metadata['vertical_res']\n                            points.push({\"x\": x, \"y\": y})\n                        }\n                        var local_id = frame_objects[j]._objects[1]['text']\n\n                        if(this.metadata.media_type == \"in_image\"){\n                            curr.push({\"type\": \"segmentation\", \"points\": points, \"local_id\": local_id, \"fileName:\": this.image_data[i]['name'], \"dataType\": \"image\"})\n                        }else{\n                            curr.push({\"type\": \"segmentation\", \"points\": points, \"local_id\": local_id, \"fileName:\": this.metadata['name'], \"dataType\": \"video\"})\n                        }\n                        //curr.push({\"type\": \"segmentation\", \"points\": points, \"local_id\": local_id})\n                    }else{\n                        alert(\"Error in exporting annotation. Please check the annotation and try again.\")\n                    }\n                } catch (error) {\n                    console.log(error)\n                }\n\n            }\n\n            standard_annot[i] = curr\n        }\n        return standard_annot\n    }\n\n    get_frame_json_fullCanvas(){\n        var standard_annot = new Array(this.frame_data.length)\n        console.log(this.metadata)\n        for(var i = 0; i < this.frame_data.length; i++){\n            var curr = []\n\n            if(this.frame_data[i] == []){\n                continue;\n            }\n            var frame_objects = this.frame_data[i]['objects']\n            if(frame_objects == undefined){\n                continue;\n            }\n            \n            for(var j = 0; j < frame_objects.length; j++){\n                console.log(frame_objects[j])\n                if(frame_objects[j]['type'] !== \"group\"){\n                    continue;\n                }\n                if(frame_objects[j]['objects'][0]['type'] === \"rect\"){\n                    console.log(frame_objects[j])\n                    var x = (frame_objects[j]['left'] / this.width) * this.metadata['horizontal_res']\n                    var y = (frame_objects[j]['top'] / this.height) * this.metadata['vertical_res']\n                    var width = ((frame_objects[j]['width'] * frame_objects[j]['scaleX']) / this.width) * this.metadata['horizontal_res']\n                    var height = ((frame_objects[j]['height'] * frame_objects[j]['scaleY']) / this.height )* this.metadata['vertical_res']\n                    var local_id = frame_objects[j]['objects'][1]['text']\n                    if(this.image_data.length != 0){\n                        curr.push({\"type\": \"bounding_box\",\"x\": x, \"y\": y, \"width\": width, \"height\": height, \"local_id\": local_id,\"fileName:\": this.image_data[i]['name'], \"dataType\": \"image\"})\n                    }else{\n                        curr.push({\"type\": \"bounding_box\",\"x\": x, \"y\": y, \"width\": width, \"height\": height, \"local_id\": local_id, \"fileName:\": this.metadata['name'], \"dataType\": \"video\"})\n                    }\n                    //curr.push({\"type\": \"bounding_box\",\"x\": x, \"y\": y, \"width\": width, \"height\": height, \"local_id\": local_id})\n                }else if (frame_objects[j]['objects'][0]['type'] === \"polygon\"){\n                    var raw_points = frame_objects[j]['objects'][0]['points']\n                    var points = []\n                    for(var k = 0; k < raw_points.length; k++){\n                        var x = (raw_points[k]['x'] / this.width) * this.metadata['horizontal_res']\n                        var y = (raw_points[k]['y'] / this.height) * this.metadata['vertical_res']\n                        points.push({\"x\": x, \"y\": y})\n                    }\n                    var local_id = frame_objects[j]['objects'][1]['text']\n\n                    if(this.image_data.length != 0){\n                        curr.push({\"type\": \"segmentation\", \"points\": points, \"local_id\": local_id, \"fileName:\": this.image_data[i]['name'], \"dataType\": \"image\"})\n                    }else{\n                        curr.push({\"type\": \"segmentation\", \"points\": points, \"local_id\": local_id, \"fileName:\": this.metadata['name'], \"dataType\": \"video\"})\n                    }\n                    //curr.push({\"type\": \"segmentation\", \"points\": points, \"local_id\": local_id})\n                }\n\n            }\n\n            standard_annot[i] = curr\n        }\n        return standard_annot\n    }\n\n    get_frame_coco(){\n\n    }\n}","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Button from 'react-bootstrap/Button'\nimport { NavDropdown, NavLink } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\nimport Col from 'react-bootstrap/Col'\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { INPUT_IMAGE, INPUT_VIDEO } from '../../static_data/const'\nimport { useSelector } from \"react-redux\";\n\nimport { initFrameData, updateFrameData, getFrameData, initAnnotationData, updateAnnotationData, getAnnotationData, initColumnData, setMedia, initMedia, setFrameRate, setMediaType, setSkipValue, getMetaData, togglePlay, setTotalFrames } from '../../processing/actions'\nimport { init } from '../../reducer/frame_data';\nimport media_data from '../../reducer/media_data';\nimport default_column from '../../static_data/basic_column_config.json'\n\nexport default function UploadModal(props){\n\tconst [show, setShow] = useState(false);\n\t\n\tconst [videoFormat, setVideoFormat] = useState(INPUT_VIDEO)\n\tconst [firstUpload, setFirstUpload] = useState(false)\n\tconst [stateFrameRate, setStateFrameRate] = useState(null)\n\tconst [stateSkipValue, setStateSkipValue] = useState(null)\n    const [stateColumnData, setStateColumnData] = useState(null)\n    const [uploadExistingAnnotation, setUploadExistingAnnotation] = useState(false)\n\n\tconst frame_count = useSelector(state => state.metadata.total_frames)\n    const frame_rate = useSelector(state => state.metadata.frame_rate)\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\tconst handleUpload = () => {\n        props.handleUploadToggle()\n\t\tsetSkipValue(parseInt(stateSkipValue))\n\t\tif(!firstUpload && !uploadExistingAnnotation){\n\t\t\tsetFirstUpload(true)\n            let totalFrames = -1\n            if(videoFormat === INPUT_VIDEO){\n                setFrameRate(parseInt(stateFrameRate))\n                totalFrames = parseInt(parseInt(stateFrameRate) * frame_count)\n            }else {\n                totalFrames = frame_count\n            }\n\t\t\tsetTotalFrames(totalFrames)\n\t\t\tinitFrameData(totalFrames)\n            if (stateColumnData == null) {\n                initColumnData(default_column)\n            }else{\n                initColumnData(stateColumnData)\n            }\n\t\t\tinitAnnotationData(totalFrames)\n\t\t}else if(uploadExistingAnnotation){\n            initColumnData(stateColumnData)\n            if(videoFormat === INPUT_VIDEO){\n                let totalFrames = parseInt(parseInt(frame_rate) * parseInt(frame_count))\n                setTotalFrames(totalFrames)\n            }\n        }\n\t}\n\n    const toggleUploadExistingAnnotation = (event) => {\n        props.handleOldAnnotation(event)\n        setUploadExistingAnnotation(true)\n    }\n\n    const downloadColumn = (file) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = function (e) {\n\t\t\t\tresolve((JSON.parse(e.target.result)));\n\t\t\t}\n\t\t\treader.readAsText(file.target.files[0])\n\t\t})\n\t}\n\n    const handleVideoFormat = (type) => {\n\t\t//TODO Make sure bug is resolved and simply have video format equal type\n\t\t//type = parseInt(type)\n\t\tif (type === INPUT_VIDEO) {\n\t\t\tsetVideoFormat(INPUT_VIDEO)\n\t\t\tsetMediaType(INPUT_VIDEO)\n\t\t} else if (type === INPUT_IMAGE) {\n\t\t\tsetVideoFormat(INPUT_IMAGE)\n\t\t\tsetMediaType(INPUT_IMAGE)\n\t\t} else {\n\t\t\talert(\"Wrong input detected - please report this bug.\")\n\t\t}\n\t}\n\tconst handleMediaUpload = (event) => {\n\t\tif (videoFormat == INPUT_VIDEO) {\n\t\t\tsetMedia(parseInt(event.target.id), event.target.files)\n\t\t} else {\n\t\t\tsetMedia(parseInt(event.target.id), event.target.files)\n\t\t}\n\t}\n\n\tconst handleColumnUpload = (event) => {\n\t\tvar promise = downloadColumn(event)\n\t\tpromise.then(function (result) {\n\t\t\tif (result['columns'] == undefined) {\n\t\t\t\talert(\"Error in processing columns. Please check the file and try again.\")\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (result != null) {\n                setStateColumnData(result)\n\t\t\t} else {\n\t\t\t\talert(\"Error in processing columns. Please check the file and try again.\")\n\t\t\t\treturn;\n\t\t\t}\n\t\t})\n\t}\n\n    const generateUploadButtons = () => {\n\t\tvar uploadButtons = []\n\t\tfor (var i = 0; i < 1; i++) {\n\t\t\tlet button_image = (\n\t\t\t\t<Form key={i} style={{ float: \"left\", gridColumn: 1, gridRow: 4 }}>\n\t\t\t\t\t<Form.File multiple id={i + \"\"} key={i} label={\"Image Upload\"} accept=\"image/*\" custom type=\"file\" onChange={(event) => { handleMediaUpload(event) }} disabled={firstUpload} />\n\t\t\t\t</Form>\n\t\t\t)\n\t\t\tlet button_video = (\n\t\t\t\t<Form key={i} style={{ float: \"left\", gridColumn: 1, gridRow: 4 }}>\n\t\t\t\t\t<Form.File id={i + \"\"} key={i} label={\"Video Upload\"} accept=\".mp4\" custom type=\"file\" onChange={(event) => { handleMediaUpload(event) }} disabled={firstUpload} />\n\t\t\t\t</Form>\n\t\t\t)\n\t\t\tif (videoFormat === INPUT_IMAGE) {\n\t\t\t\tuploadButtons.push(button_image)\n\t\t\t} else if (videoFormat === INPUT_VIDEO) {\n\t\t\t\tuploadButtons.push(button_video)\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tuploadButtons.map((but, _) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tbut\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n    return(\n        <Modal show={props.uploadShow} size='lg' backdrop='static'>\n        <Modal.Header>\n            <Modal.Title>Upload</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <div style={{ display: \"grid\" }}>\n                {/*onClick and onBlur events are for the sole purpose to stop the eventKeys from firing off*/}\n                <Form.Row>\n                    <Col>\n\n                        <Form.Control\n                            as=\"select\"\n                            id=\"inlineFormCustomSelect\"\n                            onChange={(event) => { handleVideoFormat(event.target.value) }}\n                            defaultValue={videoFormat}\n                            htmlSize={2}\n                            custom\n                            disabled={firstUpload}\n                        >\n                            <option value={INPUT_VIDEO}>Video</option>\n                            <option value={INPUT_IMAGE}>Image</option>\n                        </Form.Control>\n                    </Col>\n                    <Col>\n                        {\n                            generateUploadButtons()\n                        }\n                    </Col>\n\n                </Form.Row>\n\n                <NavDropdown.Divider />\n\n                <Form.Row>\n                    <Col>\n                        <Form.Group>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text>Frame Rate</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control\n                                    type=\"number\"\n                                    onChange={(event) => { setStateFrameRate(event.target.value ? event.target.value : 1); }}\n                                    disabled={(videoFormat === INPUT_IMAGE) || firstUpload}\n                                    isInvalid={(stateFrameRate == null || stateFrameRate == undefined || stateFrameRate == \"\") && videoFormat !== INPUT_IMAGE}\n                                    defaultValue={stateFrameRate}\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please enter a frame rate.\n                                </Form.Control.Feedback>\n                            </InputGroup>\n                        </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text>Skip Value</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control\n                                    type='number'\n                                    onChange={(event) => { setStateSkipValue(event.target.value ? event.target.value : 1) }}\n                                    isInvalid={stateSkipValue == null || stateSkipValue == undefined || stateSkipValue == \"\"}\n                                    defaultValue={stateSkipValue}\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please enter a skip value.\n                                </Form.Control.Feedback>\n                            </InputGroup>\n                        </Form.Group>\n\n                    </Col>\n                </Form.Row>\n                <NavDropdown.Divider />\n                <Form.Row>\n                    <Col >\n                        <Form.File\n                            disabled={props.disable_buttons || firstUpload}\n                            accept=\".json\"\n                            id=\"file\"\n                            label=\"Column Upload\"\n                            custom type=\"file\"\n                            onChange={handleColumnUpload}\n\n                        />\n                    </Col>\n                    <Col >\n                        <Form.File\n                            accept=\".json\"\n                            id=\"file\"\n                            label=\"Annotation Upload\"\n                            custom type=\"file\"\n                            onChange={toggleUploadExistingAnnotation}\n                            disabled={props.disable_buttons || firstUpload}\n                        />\n                    </Col>\n                </Form.Row>\n                <NavDropdown.Divider />\n            </div>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button \n                variant=\"success\"\n                onClick={handleUpload}\n                disabled={((stateFrameRate == null || stateFrameRate == \"\") && videoFormat !== INPUT_IMAGE) || (stateSkipValue == null || stateSkipValue == \"\") || props.disable_buttons}\n            >\n                {firstUpload ? \"Save\" : \"Upload\"}\n            </Button>\n        </Modal.Footer>\n    </Modal>\n    )\n}","let INPUT_IMAGE = \"in_image\"\nlet INPUT_VIDEO = \"in_video\"\n\nexport {INPUT_IMAGE, INPUT_VIDEO}","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Button from 'react-bootstrap/Button'\nimport { NavDropdown, NavLink } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { ButtonGroup } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal'\nimport Col from 'react-bootstrap/Col'\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Instructions from './instructions';\nimport { downloadFileJSON } from '../../processing/download';\n\nimport ExportingAnnotation from '../../processing/exporting_annotation';\nimport ProcessVideo from './process_video';\nimport store from '../../store'\nimport { INPUT_IMAGE, INPUT_VIDEO } from '../../static_data/const'\nimport { useSelector } from \"react-redux\";\nimport UploadModal from './upload_modal';\n\nimport { initFrameData, updateFrameData, getFrameData, initAnnotationData, updateAnnotationData, getAnnotationData, initColumnData, setMedia, initMedia, setFrameRate, setMediaType, setSkipValue, getMetaData, togglePlay, setTotalFrames } from '../../processing/actions'\nimport { init } from '../../reducer/frame_data';\n\ninitMedia(1)\nexport default function CustomNavBar(props) {\n\tconst [show, setShow] = useState(false);\n\tconst [uploadShow, setUploadShow] = useState(true);\n\tconst [videoFormat, setVideoFormat] = useState(INPUT_VIDEO)\n\tconst [process, setProcess] = useState(false)\n\tconst [playText, setPlayText] = useState(false)\n\tconst [firstUpload, setFirstUpload] = useState(false)\n\tconst [stateFrameRate, setStateFrameRate] = useState(null)\n\tconst [stateSkipValue, setStateSkipValue] = useState(null)\n\n\tconst play_redux = useSelector(state => state.play_status.play)\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\tconst handleUploadToggle = () => {\n\t\tsetUploadShow(!uploadShow)\n\t}\n\n\n\tconst handleDownloadJSON = () => {\n\t\tvar converted_annot = new ExportingAnnotation(store.getState().frame_data.data, props.video_width, props.video_height, getMetaData(), store.getState().media_data.data[0]).get_frame_json()\n\t\tconsole.log(converted_annot)\n\t\tdownloadFileJSON(converted_annot, getMetaData())\n\t}\n\n\tconst handlePlaying = (event) => {\n\t\ttogglePlay()\n\t}\n\n\tuseEffect(() => {\n\t\tif (play_redux == false) {\n\t\t\tsetPlayText(\"Play\")\n\t\t} else {\n\t\t\tsetPlayText(\"Pause\")\n\t\t}\n\t}, [play_redux])\n\n\treturn (\n\t\t<div>\n\t\t\t<Modal\n\t\t\t\tshow={show}\n\t\t\t\tonHide={handleClose}\n\t\t\t\tsize='lg'\n\t\t\t\tbackdrop='static'\n\t\t\t>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Instructions</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body><Instructions></Instructions></Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t\t<UploadModal\n\t\t\t\thandleOldAnnotation={props.handleOldAnnotation}\n\t\t\t\thandleUploadToggle={handleUploadToggle}\n\t\t\t\tuploadShow={uploadShow}\n\t\t\t/>\n\t\t\t<Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" className=\"bg-5\">\n\t\t\t\t<Navbar.Brand href=\"#home\">AVAT</Navbar.Brand>\n\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t<NavDropdown disabled={props.disable_buttons} title=\"Export\" id=\"basic-nav-dropdown\">\n\t\t\t\t\t\t<NavDropdown.Item onClick={handleDownloadJSON}>JSON</NavDropdown.Item>\n\t\t\t\t\t\t<NavDropdown.Divider />\n\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t<NavLink onClick={handleShow}>Instructions</NavLink>\n\t\t\t\t\t<NavLink onClick={props.handle_link_open}>Report</NavLink>\n\t\t\t\t</Nav>\n\t\t\t\t<div>\n\t\t\t\t\t<Button variant=\"outline-success\" onClick={handleUploadToggle}>Settings</Button>{' '}\n\t\t\t\t\t{' '}\n\t\t\t\t\t<Dropdown as={ButtonGroup}>\n\t\t\t\t\t\t<Button variant=\"secondary\" disabled={true}>{props.display_frame_num}</Button>{' '}\n\t\t\t\t\t\t<Dropdown.Toggle split variant=\"secondary\" id=\"dropdown-split-basic\" />\n\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Form.Label>Skip Value</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tplaceholder='Skip Value'\n\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\tonChange={(event) => { setSkipValue(event.target.value) }}\n\t\t\t\t\t\t\t\t\tonClick={props.toggleKeyCheck(false)}\n\t\t\t\t\t\t\t\t\tonBlur={props.toggleKeyCheck(true)}\n\t\t\t\t\t\t\t\t\tdefaultValue={props.skip_value}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t</Dropdown>{' '}\n\n\t\t\t\t\t<Button variant=\"primary\" disabled={props.disable_buttons} onClick={props.skip_frame_backward}>Prev</Button>{' '}\n\t\t\t\t\t{\n\t\t\t\t\t\tvideoFormat === INPUT_VIDEO &&\n\t\t\t\t\t\t<Button variant=\"primary\" disabled={props.disable_buttons} onClick={handlePlaying}>{playText}</Button>\n\t\t\t\t\t}\n\t\t\t\t\t{' '}\n\t\t\t\t\t<Button variant=\"primary\" disabled={props.disable_buttons} onClick={props.skip_frame_forward}>Next</Button>{' '}\n\t\t\t\t\t<Dropdown as={ButtonGroup} drop='left'>\n\t\t\t\t\t\t<Button variant=\"success\" onClick={props.addToCanvas}>Add</Button>\n\t\t\t\t\t\t<Dropdown.Toggle split variant=\"success\" id=\"dropdown-split-basic\" />\n\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t<Dropdown.Item onClick={(event) => { props.change_annotation_type(\"1\") }}>Behavior Annotation</Dropdown.Item>\n\t\t\t\t\t\t\t<Dropdown.Item onClick={(event) => { props.change_annotation_type(\"2\") }}>BoundingBox</Dropdown.Item>\n\t\t\t\t\t\t\t<Dropdown.Item onClick={(event) => { props.change_annotation_type(\"3\") }}>Segmentation</Dropdown.Item>\n\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t\t{/*<Button variant=\"danger\" onClick={remove} disabled={disable_buttons} style={{position:\"relative\"}}>Remove</Button>{' '}*/}\n\t\t\t\t</div>\n\t\t\t</Navbar>\n\t\t</div>\n\t)\n}\n","import store from '../store'\nimport {getFrameData, getAnnotationData} from './actions'\n\nexport async function downloadFileJSON (frame_data, VIDEO_METADATA) {\n    var fileName = \"generated_annotations\";\n   \n    const json = JSON.stringify({\"vid_metadata\": VIDEO_METADATA, \"annotations\": frame_data, \"behavior_data\": store.getState().annotation_data.data})\n    //var json = JSON.stringify(frame_data);\n    var blob = new Blob([json],{type:'application/json'});\n    var href = await URL.createObjectURL(blob);\n    var link = document.createElement('a');\n    link.href = href;\n    link.download = fileName + \".json\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}\n\n\n//Legacy code below - Can be refrenced later IF need for CSV is present. Currently broken.\nfunction convert_data_csv(data, columns){\n    console.log(columns)\n    var csv = new Array(data.length + 1)\n    for(var i = 0; i < csv.length; i++){\n        csv[i] = []\n    }\n    csv[0].push(\"frame_num\")\n    for(var i = 0; i < columns.length; i++){\n        csv[0].push(columns[i]['dataField'])\n    }\n    for(var i = 0; i < data.length; i++){\n        for(var j = 0; j < data[i].length; j++){\n            csv[i+1][j]=[];\n            var obj = data[i][j]\n            var vals = Object.keys((obj)).map(function (key) { return obj[key]; });\n            csv[i+1][j] = i + \",\" + vals.join(\",\")\n        }\n        csv[i+1] = csv[i+1].join(\"\\n\")\n    }\n    csv = csv.join(\"\\n\")\n    return csv\n}\n\nexport async function downloadFileCSV (ANNOTATION_VIDEO_NAME, ANNOTATOR_NAME, annotation_data, columns) {\n    var fileName = \"generated_annotations\";\n    if(ANNOTATION_VIDEO_NAME !== \"\" && ANNOTATOR_NAME !== \"\"){\n        fileName = ANNOTATION_VIDEO_NAME.split('.').slice(0, -1).join('.') + \"_\" +  ANNOTATOR_NAME\n    }\n    var csv = convert_data_csv(annotation_data, columns(\"\"))\n    var blob = new Blob([csv],{type:'application/octet-stream'});\n    var href = await URL.createObjectURL(blob);\n    var link = document.createElement('a');\n    link.href = href;\n    link.download = fileName + \".csv\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}","import React, { useEffect, useState } from \"react\"; \nimport ReactDOM from 'react-dom'\n\nimport store from '../../store' \nimport {initFrameData, updateFrameData, getFrameData, \n\t\tinitAnnotationData, updateAnnotationData, getAnnotationData, \n\t\tinitColumnData, getColumnData, \n\t\tinitCurrentFrame, getCurrentFrame, setCurrentFrame, setTotalFrames,} from '../../processing/actions'\nimport { useSelector } from \"react-redux\";\n\nimport {INPUT_IMAGE, INPUT_VIDEO} from '../../static_data/const'\nconst fabric = require(\"fabric\").fabric;\n\n\nconst canvasBackgroundUpdate = (currFrameData, inputType, image_url, scaling_factor_width, scaling_factor_height, fabricCanvas, remove_obj=true) => {\n\tif(inputType == INPUT_IMAGE){ //This is for when images are uploaded\n\t\tvar img = new Image()\n\t\timg.onload = function() {\n\t\t\tif (remove_obj){\n\t\t\t\tfabricCanvas.clear();\n\t\t\t}\n\t\t\tif(currFrameData != undefined){\n\t\t\t\tfabric.util.enlivenObjects(currFrameData, function (enlivenedObjects){\n\t\t\t\t\tenlivenedObjects.forEach(function (obj, index) {\n\t\t\t\t\t\tfabricCanvas.add(obj);\n\t\t\t\t\t});\n\t\t\t\t\tfabricCanvas.renderAll();\n\t\t\t\t})\n\t\t\t}\n\t\t\tvar f_img = new fabric.Image(img, {\n\t\t\t\tobjectCaching: false,\n\t\t\t\tscaleX: scaling_factor_width / img.width,\n\t\t\t\tscaleY: scaling_factor_height / img.height\n\t\t\t});\n\t\t\tfabricCanvas.setBackgroundImage(f_img);\n\t\t\n\t\t\tfabricCanvas.renderAll();\n\t\t};\n\t\timg.src = URL.createObjectURL(image_url)\n\t\treturn;\n\t}else{ //This is for videos\n\t\tif (remove_obj){\n\t\t\tfabricCanvas.remove(...fabricCanvas.getObjects());\n\t\t}\n\t\tif(currFrameData != undefined){\n\t\t\tfabric.util.enlivenObjects(currFrameData, function (enlivenedObjects){\n\t\t\t\tenlivenedObjects.forEach(function (obj, index) {\n\t\t\t\t\tfabricCanvas.add(obj);\n\t\t\t\t});\n\t\t\t\tfabricCanvas.renderAll();\n\t\t\t})\n\t\t}\n\t\tfabricCanvas.renderAll();\n\t}\n}\n\nexport default function FabricRender(props){\n\tconst [fabricCanvas, setFabricCanvas] = useState(null)\n\tconst [currindex, setCurrindex] = useState(0)\n\tconst [upload, setUpload] = useState(false)\n\tconst [frameToUpdate, setFrameToUpdate] = useState(0)\n\tconst metadata_redux = useSelector(state => state.metadata)\n\tconst frame_redux = useSelector(state => state.frame_data)\n\tconst image_data_store = useSelector(state => state.media_data)\n\tconst currFrame = useSelector(state => state.current_frame)\n\tconst currframe_redux = currFrame['data']\n\tconst play_redux = useSelector(state => state.play_status.play)\n\tconst image_data = image_data_store['data'][props.stream_num]\n\n\tconst save_data = (frame_number, reason) => {\n\t\tif(fabricCanvas){\n\t\t\tconsole.log('SAVING DATA FOR FRAME', frame_number, reason)\n\t\t\tupdateFrameData(frame_number, fabricCanvas.getObjects())\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tvar temp_fabricCanvas = (new fabric.Canvas('c', {\n\t\t\tuniScaleTransform: true,\n\t\t\tuniformScaling: false,\n\t\t\tincludeDefaultValues: false\n\t\t}));\n\n\t\tfabric.Image.prototype.toObject = (function(toObject) {\n\t\t\treturn function() {\n\t\t\t\treturn fabric.util.object.extend(toObject.call(this), {\n\t\t\t\t\tsrc: this.toDataURL()\n\t\t\t\t});\n\t\t\t};\n\t\t})(fabric.Image.prototype.toObject);\n\n\t\ttemp_fabricCanvas.on('mouse:wheel', function(opt) {\n\t\t\tvar delta = opt.e.deltaY;\n\t\t\tvar zoom = temp_fabricCanvas.getZoom();\n\t\t\tzoom *= 0.999 ** delta;\n\t\t\tif (zoom > 20) zoom = 20;\n\t\t\tif (zoom < 0.01) zoom = 0.01;\n\t\t\ttemp_fabricCanvas.zoomToPoint({ x: opt.e.offsetX, y: opt.e.offsetY }, zoom);\n\t\t\topt.e.preventDefault();\n\t\t\topt.e.stopPropagation();\n\t\t});\n\n\t\ttemp_fabricCanvas.on('object:modified', function (event) {\n\t\t\tthis.objDrag = true;\n\t\t\tconst currentFrame = store.getState().current_frame['data']\n            updateFrameData(currentFrame, temp_fabricCanvas.getObjects())\n\t\t});\n\n\t\ttemp_fabricCanvas.on('mouse:down', function(opt) {\n\t\t\tvar evt = opt.e;\n\t\t\tif (evt.altKey === true) {\n\t\t\t\tthis.isDragging = true;\n\t\t\t\tthis.selection = false;\n\t\t\t\tthis.lastPosX = evt.clientX;\n\t\t\t\tthis.lastPosY = evt.clientY;\n\t\t\t}\n\t\t});\n\t\ttemp_fabricCanvas.on('mouse:move', function(opt) {\n\t\t\tif (this.isDragging) {\n\t\t\t\tvar e = opt.e;\n\t\t\t\tvar vpt = this.viewportTransform;\n\t\t\t\tvpt[4] += e.clientX - this.lastPosX;\n\t\t\t\tvpt[5] += e.clientY - this.lastPosY;\n\t\t\t\tthis.requestRenderAll();\n\t\t\t\tthis.lastPosX = e.clientX;\n\t\t\t\tthis.lastPosY = e.clientY;\n\t\t\t}\n\t\t});\n\t\ttemp_fabricCanvas.on('mouse:up', function(opt) {\n            if(this.objDrag){\n\t\t\t\tthis.objDrag = false;\n\t\t\t}\n\t\t\tthis.setViewportTransform(this.viewportTransform);\n\t\t\tthis.isDragging = false;\n\t\t\tthis.selection = true;\n\t\t});\n\n\t\tvar el = ReactDOM.findDOMNode(this);\n\t\tvar canvas_elem = document.getElementsByTagName('canvas')[props.stream_num*2]\n\t\ttemp_fabricCanvas.initialize(canvas_elem, {\n\t\t\theight: props.scaling_factor_height,\n\t\t  \twidth: props.scaling_factor_width,\n\t\t  \tbackgroundColor : null,\n\t\t});\n\n\t\tsetFabricCanvas(temp_fabricCanvas)\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif(fabricCanvas){\n\t\t\t// save_data(frameToUpdate, \"frame_change\")\n\t\t\tsetFrameToUpdate(currframe_redux) \n\t\t\tvar video = document.getElementsByTagName('video')[props.stream_num]\n\t\t\tif(upload == true){\n\t\t\t\tvideo.currentTime = (video.duration * ((currframe_redux+1)/metadata_redux['total_frames']))\t\t\t\n\t\t\t}\n\t\t\tif(metadata_redux['media_type'] == INPUT_VIDEO){\n\t\t\t\tcanvasBackgroundUpdate(getFrameData(currframe_redux), INPUT_VIDEO, image_data[0], props.scaling_factor_width, props.scaling_factor_height, fabricCanvas)\n\t\t\t}else if (metadata_redux['media_type'] == INPUT_IMAGE){\n\t\t\t\tcanvasBackgroundUpdate(getFrameData(currframe_redux), INPUT_IMAGE, image_data[currframe_redux], props.scaling_factor_width, props.scaling_factor_height, fabricCanvas)\n\t\t\t}\n\t\t}\n\t}, [currFrame])\n\n\tuseEffect(() => {\n\t\tif (upload==false){\n\t\t\treturn\n\t\t}\n\t\tvar video = document.getElementsByTagName('video')[props.stream_num]\n\t\tif(play_redux){\n\t\t\tsave_data(frameToUpdate, \"play\")\n\t\t\tvideo.play()\n\t\t\tfabric.util.requestAnimFrame(function renderLoop() {\n\t\t\t\tfabricCanvas.renderAll();\n\t\t\t  \tfabric.util.requestAnimFrame(renderLoop);\n\t\t\t});\n\t\t}else{\n\t\t\tvideo.pause()\n\t\t\tlet frame_number = Math.ceil((video.currentTime  / video.duration) * metadata_redux['total_frames'])\n\t\t\tconsole.log(\"FRAME NUMBER\", frame_number)\n\t\t\tsetCurrentFrame(frame_number)\n\t\t}\n\t}, [play_redux])\n\n\n\tuseEffect(() => {\n\t\t// We want to redraw when a annotation is added or removed. Unfortunately this also causes a redraw when the current frame is changed.\n\t\t// This is not ideal, but it is a good enough solution for now. This should NOT save the data.\n\n\t\tif(fabricCanvas){\n\t\t\tcanvasBackgroundUpdate(getFrameData(currframe_redux), metadata_redux['media_type'], image_data[currframe_redux], props.scaling_factor_width, props.scaling_factor_height, fabricCanvas)\n\t\t}\n\t}, [frame_redux])\n\n\t\n\tif(fabricCanvas != null && image_data != undefined && upload===false && play_redux===false){\n\t\tif(image_data.length > 0){\n\t\t\tif(metadata_redux['media_type'] == INPUT_VIDEO){\n\t\t\t\tvar video = document.getElementsByTagName('video')[props.stream_num]\n\t\t\t\tvar source = document.createElement('source');\n\t\t\t\tsource.src = URL.createObjectURL(image_data[0])\n\t\t\t\tsource.type = \"video/mp4\"\n\t\t\t\tvideo.appendChild(source)\n\t\t\t\tvideo.onloadedmetadata = function(){\n\t\t\t\t\tinitAnnotationData(parseInt(video.duration))\n\t\t\t\t\tinitFrameData(parseInt(video.duration))\n\t\t\t\t\tsetTotalFrames(parseInt(video.duration))\n\t\t\t\t\tvideo.currentTime=0\n\t\t\t\t}\n\t\t\t\tvideo.oncanplaythrough = function(){\n\t\t\t\t\tif(upload === false){\n\t\t\t\t\t\tvar new_vid = new fabric.Image(video, {\n\t\t\t\t\t\t\tobjectCaching: false,\n\t\t\t\t\t\t\tscaleX: props.scaling_factor_width / video.videoWidth,\n\t\t\t\t\t\t\tscaleY: props.scaling_factor_height / video.videoHeight\n\t\t\t\t\t\t})\n\t\t\t\t\t\tvideo.width = video.videoWidth\n\t\t\t\t\t\tvideo.height = video.videoHeight\n\t\t\t\t\t\tfabricCanvas.setBackgroundImage(new_vid);\n\t\t\t\t\t\tfabricCanvas.renderAll();\n\t\t\t\t\t}\n\t\t\t\t\tsetUpload(true)\n\t\t\t\t}\n\t\t\t}else if(metadata_redux['media_type'] == INPUT_IMAGE){\n\t\t\t\tcanvasBackgroundUpdate(getFrameData(currframe_redux), INPUT_IMAGE, image_data[currframe_redux], props.scaling_factor_width, props.scaling_factor_height, fabricCanvas)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn(\n\t\t<div style={{display: \"grid\"}}>\t\t\n\t\t\t<div style={{gridColumn: 1, gridRow:1, position: \"relative\", width: props.scaling_factor_width, height: props.scaling_factor_height, top: 0, left: 0, opacity: 0}}>\n\t\t\t\t<video></video>\n\t\t\t</div>\n\t\t\t<div style={{gridColumn: 1, gridRow:1, position: \"relative\",  top: 0, left: 0}}>\n\t\t\t\t<canvas id={props.stream_num}></canvas>\n\t\t\t</div>\n\t\t</div>\n\t)\n\t\t    //}\n}\n","import React from 'react'\nimport {initFrameData, updateFrameData, getFrameData, initAnnotationData, updateAnnotationData, getAnnotationData} from '../../processing/actions'\n\nimport { useTable, usePagination } from 'react-table'\n\nexport default function AnnotTable({columns, data, select_data, current_frame, change_annot}){\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        data,\n      })\n      if(!columns){\n        return (\n            <div>\n                {\"No column upload detected.\"}\n            </div>\n        )\n    }\n\n    return(\n        <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n            <thead>\n                {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                    <th {...column.getHeaderProps()} \n                    style={{\n                      background: '#657',\n                      color: 'white',\n                      fontWeight: 'bold'\n                    }}>{column.render('Header')}</th>\n                    ))}\n                </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    const {id, global_id, posture, behavior, confidence} = row\n                    var selection = genSelection(row.original, select_data, columns, i, current_frame)\n                    return(selection)\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nconst change_row = (e) => {\n    var curr_data = getAnnotationData(e.target.dataset.curr)\n    if (curr_data.length === 0){\n        alert(\"Row changing value failed - please report this bug.\")\n        return;\n    }\n    curr_data[e.target.id][e.target.dataset.type] = e.target.value\n    updateAnnotationData(parseInt(e.target.dataset.curr), curr_data)\n}\n\nconst delete_row = (e) => {\n    var curr_data = getAnnotationData(e.target.dataset.curr)\n    if (curr_data.length === 0){\n        alert(\"Row deletion failed - please report this bug.\")\n        return;\n    }\n    var annot_delte = curr_data[e.target.id]['id']\n    console.log(annot_delte)\n    curr_data.splice(e.target.id, 1)\n    updateAnnotationData(parseInt(e.target.dataset.curr), curr_data)\n    var curr_img_data = getFrameData(e.target.dataset.curr)\n    for(var i = 0; i < curr_img_data.length; i++){\n        if(curr_img_data[i].objects[1].text == annot_delte){\n            curr_img_data.splice(i, 1)\n        }\n    }\n    updateFrameData(parseInt(e.target.dataset.curr), curr_img_data)\n}\n\nfunction genSelection(elem, select_data, columns, curr_idx, current_frame){\n    var row_vals = []\n    console.log(current_frame)\n    for(var i = 0; i < columns[0].columns.length; i++){\n        var curr_elem = columns[0].columns[i]['accessor']\n        if(!check_keys(select_data, curr_elem)){\n            continue\n        }\n        let temp = (\n            <select id={curr_idx} data-type={curr_elem} data-curr={current_frame} defaultValue={elem[curr_elem]} onChange={change_row}>\n                <option value=\"\"></option>\n                {\n                    select_data[curr_elem].map((beh, _) => {\n                        return(\n                            <option value={beh.value}>{beh.value}</option>\n                        )\n                    })\n                }\n            </select>\n        )\n        row_vals.push(temp)\n    }\n    \n    let combined_elems = (\n        <tr key={elem.id}>\n            <td>{elem.id}</td>\n            <td>\n                <input type={\"text\"} style={{width: \"50%\"}} defaultValue={elem.global_id} id={curr_idx} data-type={\"global_id\"} data-curr={current_frame} onChange={change_row}></input>\n            </td>\n            {\n                row_vals.map((i, j) => {\n                    return(<td id={j}>{i}</td>)\n                })\n            }\n            <td>\n                <input type={\"button\"} style={{backgroundColor: \"#f44336\"}} defaultValue={elem.global_id} id={curr_idx} data-type={\"global_id\"} data-curr={current_frame} onClick={delete_row}></input>\n            </td>\n        </tr>\n    )\n    return combined_elems\n}\n\nfunction check_keys(obj, key){\n    let obj_keys = Object.keys(obj)\n    for(var i = 0; i < obj_keys.length; i++){\n        if(obj_keys[i] === key){\n            return true\n        }\n    }\n    return false\n}\n","import React from \"react\"; \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport Button from 'react-bootstrap/Button'\nimport { FormControl } from \"react-bootstrap\";\n\nimport AnnotTable from './annot_table'\nimport SwapAnnotTable from \"./cumulative_annot_table\";\n\nimport store from '../../store'\n\nfunction getAnnotationTableCount() {\n    var annotation_data = store.getState().annotation_data.data\n    var data = []\n    if (!annotation_data){\n        return data\n    }\n    for(var i = 0; i < annotation_data.length; i++){\n        if(annotation_data[i].length !== 0){\n            var txt_id = \"\"\n            var txt_global = \"\"\n            for(var j = 0; j < annotation_data[i].length; j++){\n                txt_id += (annotation_data[i][j]['id']) + ', '\n                txt_global += (annotation_data[i][j]['global_id']) + ', '\n            }\n            data.push({frame_num: i, anno_count: annotation_data[i].length, local_ids: txt_id, global_ids: txt_global})\n        }\n    }\n    return data\n}\n\n\nexport default function AnnotationTable(props){\n    var annotation_data = (props.annotation_data)\n    var columns = []\n    var col = []\n    var select_data = undefined\n    if(store.getState().column_annot.data != undefined){\n      col = store.getState().column_annot.data['columns']\n      select_data = store.getState().column_annot.data['select_data']\n      columns.push(col)//hookBypass(col)\n    }\n    const anno_col = React.useMemo(\n        () => [\n          {\n            Header: 'Name',\n            columns: [\n              {\n                Header: 'Frame',\n                accessor: 'frame_num',\n              },\n              {\n                Header: 'Count',\n                accessor: 'anno_count',\n              },\n              {\n                Header: 'Local ID',\n                accessor: 'local_id',\n              },\n              {\n                Header: 'Global ID',\n                accessor: 'global_ids',\n              },\n              /*{\n                Header: 'Swap',\n                accessor: 'swap',\n              }*/\n            ],\n          }\n        ],\n        []\n      )\n\n    //TODO Add in force option for user to upload some sort of config file to continue along to next steps.\n    return (\n        <div>\n        {\n            col.length != 0 &&\n            <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"home\" title=\"Current\">\n                    <AnnotTable columns={columns} data={annotation_data} select_data={select_data} current_frame={props.currentFrame} change_annot={props.handleChangeAnnot}/>\n                </Tab>\n\n            </Tabs>\n        }   \n        </div>\n           \n    )\n}\n/*\n                <Tab eventKey=\"swap\" title=\"Swap\">\n                    <SwapAnnotTable columns={anno_col} data={getAnnotationTableCount()}></SwapAnnotTable>\n                </Tab>\n*/\n/*\n<Tab eventKey=\"profile\" title=\"Previous\">\n                <BootstrapTable\n                    keyField='frame_num'\n                    data={data} \n                    columns={anno_col((props.handleSetCurrentFrame))}\n                    table\n                    noDataIndication={ () => <div>No recorded annotations or behaviors for this video.</div> }\n                    pagination={ paginationFactory() }\n                />\n            </Tab>\n*/","//Core imports\nimport React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//Constants\nimport {INPUT_IMAGE, INPUT_VIDEO} from '../../static_data/const'\n\n//UI Element imports\nimport Toast from 'react-bootstrap/Toast'\n\n//Processing\nimport ExtractingAnnotation from '../../processing/annotation-processing'\n\n//Annotations\nimport { BoundingBox } from '../../annotations/bounding_box'\n\n//Column information + data structure\nimport {columns} from '../../static_data/columns'\nimport {ANNOTATION_FRAME, ANNOTATION_BBOX, ANNOTATION_KEYPOINT, ANNOTATION_SEG} from '../../static_data/constants'\n\n//Components\nimport CustomNavBar from \"../Components/nav_bar\";\nimport FabricRender from \"../Components/fabric_canvas\";\nimport AnnotationTable from \"../Components/change_table\";\n\n\n//Redux\nimport store from '../../store' \nimport {initFrameData, updateFrameData, getFrameData, \n\t\tinitAnnotationData, updateAnnotationData, getAnnotationData, \n\t\tgetColumnData,\n\t\tinitCurrentFrame, getCurrentFrame, setCurrentFrame,\n\t\tinitMedia,\n\t\tinitMetadata, setRes, setFrameRate, setTotalFrames,\n        initColumnData,\n\t\tinitPlay, togglePlay} from '../../processing/actions'\nimport { useSelector } from \"react-redux\";\n\n// Data imports\nimport default_column from '../../static_data/basic_column_config.json'\n\nconst fabric = require(\"fabric\").fabric;\n\n//TODO ADD DYNAMIC SOLUTION\nvar scaling_factor_width = 1920;\nvar scaling_factor_height = 1080;\n\n//var current_screen_width = window.screen.width;\nvar current_screen_height = window.screen.height;\n\nif(current_screen_height >= 1080){////Mappings are based off of https://en.wikipedia.org/wiki/List_of_common_resolutions make sure to use 1:1 and 16:9 aspect ratio\n  scaling_factor_width = 1280;\n  scaling_factor_height = 720;\n}else if(current_screen_height >= 1024){\n  scaling_factor_width = 1152;\n  scaling_factor_height = 648;\n}else if(current_screen_height >= 768){\n  scaling_factor_width = 1024;\n  scaling_factor_height = 576;\n}\n\nvar upload = false;\nvar disable_buttons = true;\nvar toast_text = \"\"\nvar ANNOTATION_VIDEO_NAME = \"\"\nvar VIDEO_METADATA = {}\nvar play_button_text = \"Play\"\nvar segmentation_flag = false;\n\n//TODO remove after fixing null exceptions\n//initAnnotationData(1)\n//initFrameData(1)\ninitCurrentFrame(0)\ninitMetadata(scaling_factor_width, scaling_factor_height, null, INPUT_VIDEO, 1)\ninitPlay()\nconsole.log(default_column)\ninitColumnData(\n    default_column\n)\n\n//Current frame counter\nexport default function MainUpload() {\n\tconst [visualToggle, setVisualToggle] = useState(0);\n\tconst [annotationType, setAnnotationType] = useState(\"1\")\n\tconst [boxCount, setBoxCount] = useState(0)\n\tconst [oldAnnotation, setOldAnnotation] = useState(null)\n\tconst [save, changeSave] = useState(false);\n\tconst [keyCheck, changeKeyCheck] = useState(true)\n\tconst [isLoading, setIsLoading] = useState(true)\n\n\t//New state vars\n\tconst [currAnnotationData, setCurrAnnotationData] = useState([])\n\n\tconst annot_redux = useSelector(state => state.annotation_data.data)\n\tconst column_redux = useSelector(state => state.column_annot.data)\n\tconst currframe_redux = useSelector(state => state.current_frame)['data']\n\tconst imagedata_redux = useSelector(state => state.media_data.data)\n\tconst metadata_redux = useSelector(state => state.metadata)\n\tvar inputType = metadata_redux['media_type']\n\tvar skip_value = parseInt(metadata_redux['skip_value'])\n\n\tuseEffect(() => {\n\t\tif(upload == true){\n\t\t\tvar annot = getAnnotationData(currframe_redux)\n\t\t\tsetCurrAnnotationData(annot)\n\t\t}\n\t}, [currframe_redux])\n\n\tuseEffect(()=>{\n\t\tif(annot_redux.length === 1){\n\t\t\tinitAnnotationData(metadata_redux.total_frames)\n\t\t\tinitFrameData(metadata_redux.total_frames)\n\t\t}\n\t}, [metadata_redux]);\n\n\tuseEffect(() => {\n\t\tif(imagedata_redux[0].length != 0){\n\t\t\tif(metadata_redux['media_type'] == INPUT_IMAGE){\n\t\t\t\tsetTotalFrames(imagedata_redux[0].length)\n\t\t\t\tupload = true\n\t\t\t\tdisable_buttons = false\n\t\t\t\tinitAnnotationData(imagedata_redux[0].length)\n\t\t\t\tinitFrameData(imagedata_redux[0].length)\n\t\t\t\tvar url = (imagedata_redux[0][0])\n\t\t\t\tvar img = new Image;\n\t\t\t\timg.onload = function() {\n\t\t\t\t\tVIDEO_METADATA = {\"horizontal_res\": img.width, \"vertical_res\": img.height}\n\t\t\t\t\tURL.revokeObjectURL(img.src)\n\t\t\t\t}\n\t\t\t\timg.src = url\n\t\t\t\tsetVisualToggle(10)\n\t\t\t}else if(metadata_redux['media_type'] == INPUT_VIDEO){\n\t\t\t\tupload = true\n\t\t\t\tdisable_buttons = false\n\t\t\t\tinitAnnotationData(imagedata_redux[0].length)\n\t\t\t\tinitFrameData(imagedata_redux[0].length)\n\t\t\t\tsetVisualToggle(10)\n\t\t\t}\n\t\t}\n\t\tscaling_factor_width = 1920;\n\t\tscaling_factor_height = 1080;\n\t\tif(current_screen_height >= 1080){////Mappings are based off of https://en.wikipedia.org/wiki/List_of_common_resolutions make sure to use 1:1 and 16:9 aspect ratio\n\t\t\tscaling_factor_width = 1280;\n\t\t\tscaling_factor_height = 720;\n\t\t  }else if(current_screen_height >= 1024){\n\t\t\tscaling_factor_width = 1152;\n\t\t\tscaling_factor_height = 648;\n\t\t  }else if(current_screen_height >= 768){\n\t\t\tscaling_factor_width = 1024;\n\t\t\tscaling_factor_height = 576;\n\t\t}\n\t\tscaling_factor_height = scaling_factor_height * (1/imagedata_redux.length)\n\t\tscaling_factor_width = scaling_factor_width * (1/imagedata_redux.length)\n\n\n\t}, [imagedata_redux])\n\n\tconst addToCanvas = () => {\n\t\tvar color = \"#\" + ((1<<24)*Math.random() | 0).toString(16)\n\t\t\n\t\tif(currAnnotationData == null){\n\t\t\tsetCurrAnnotationData([])\n\t\t}\n\n\t\tvar annotation_type_txt = \"error\"\n\n\t\tif (annotationType === ANNOTATION_BBOX){\n\t\t\tannotation_type_txt = \"b\"\n\t\t\tvar new_bbox = new BoundingBox(50, 50, 50, 50, color, boxCount+'b', \"None\").generate_no_behavior()\n\t\t\tvar frame_dat = getFrameData(getCurrentFrame())\n\t\t\tframe_dat = Object.assign([], frame_dat)\n\t\t\tframe_dat.push(new_bbox)\n\t\t\tupdateFrameData(currframe_redux, frame_dat)\n\t\t\t//updateFrameData(currframe_redux, [new_bbox])\n\t\t}else if(annotationType === ANNOTATION_FRAME){\n\t\t\t//TODO Add annotation frame datapoint\n\t\t\tannotation_type_txt = \"f\"\n\t\t}\n\t\t\n\t\tvar saved_annot = getAnnotationData(getCurrentFrame())\n\t\tvar generated_annotation;\n\t\tif(inputType === INPUT_IMAGE){\n\t\t\tgenerated_annotation = create_annotation(boxCount+annotation_type_txt)\n\t\t}else{\n\t\t\tgenerated_annotation = create_annotation(boxCount+annotation_type_txt)\n\t\t}\n\t\tsaved_annot = Object.assign([], saved_annot)\n\t\tsaved_annot.push(generated_annotation)\n\t\tupdateAnnotationData(currframe_redux, saved_annot)\n\n\t\tsetBoxCount(boxCount + 1);\n\t}\n\n\n\tuseEffect(() =>{\n\t\tif(upload == true){\n\t\t\tsetCurrAnnotationData(getAnnotationData(currframe_redux))\n\t\t}\n\t}, [annot_redux])\n\n\tconst create_annotation = (id) => {\n\t\tvar columns = getColumnData()\n\t\tvar new_data = {}\n\t\tcolumns = columns['data']['columns']['columns']\n\t\tfor(var i = 0; i < columns.length; i++){\n\t\t\tvar curr_val = columns[i]\n\t\t\tnew_data[curr_val.accessor] = \"\"\n\t\t}\n\t\tif(inputType === INPUT_IMAGE){\n\t\t\tnew_data['dataType'] = \"image\"\n\t\t\tnew_data['fileName'] = \"temp\"//image_frames[currframe_redux]['name']\n\t\t}else{\n\t\t\tnew_data['dataType'] = \"video\"\n\t\t\tnew_data['fileName'] = \"frame_\" + currframe_redux\n\t\t}\n\t\tnew_data['id'] = id\n\t\treturn new_data\n\t}\n\n\tconst toggle_segmentation = (event) => {\n\t\tsegmentation_flag = !segmentation_flag\n\t}\n\n\tconst handleOldAnnotation = (event) => {\n\t\tvar promise = downloadOldAnnotation(event)\n\t\tpromise.then(function (result) {\n\t\t\tif(result != null){\n\t\t\t\tsetOldAnnotation(new ExtractingAnnotation(result, scaling_factor_width, scaling_factor_height));\n\t\t\t\tsetRes(result.vid_metadata.horizontal_res, result.vid_metadata.vertical_res)\n\t\t\t}else{\n\t\t\t\talert(\"Error in processing Annotation. Please check the file and try again.\")\n\t\t\t}\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\t//TODO Find a more elegant solution. This is a temporay patch work.\n\t\tif(oldAnnotation == null){\n\t\t\treturn;\n\t\t}\n\t\tstore.dispatch({\n\t\t\ttype: \"frame_data/initOldAnnotation\",\n\t\t\tpayload: oldAnnotation.get_frame_data()\n\t\t});\n\t\tstore.dispatch({\n\t\t\ttype: \"annotation_data/initOldAnnotation\",\n\t\t\tpayload: oldAnnotation.get_annotation_data()\n\t\t});\n\t\tsetFrameRate(oldAnnotation.get_frame_rate())\n\t\tsetCurrAnnotationData(oldAnnotation.get_annotation_data()[0])\n\t\tsetBoxCount(oldAnnotation.find_highest_localid())\n\t}, [oldAnnotation]);\n\t\t\n\n\tuseEffect(() => { //This shold update the view upon column loading\n\t\tsetIsLoading(false)\n\t}, [column_redux])\n\n\n\tconst downloadOldAnnotation = (file) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = function(e) {\n\t\t\t\tresolve((JSON.parse(e.target.result)));\n\t\t\t}\n\t\t\treader.readAsText(file.target.files[0])\n\t\t})\n\t}\n  \n\tconst skip_frame_forward = e =>{\n\t\tvar frameVal = currframe_redux + skip_value\n\n\t\tif(frameVal >= metadata_redux['total_frames']){\n\t\t\tif(inputType === INPUT_IMAGE){\n\t\t\t\tsetCurrentFrame(metadata_redux['total_frames']-1)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetCurrentFrame(metadata_redux['total_frames']-1)\n\t\t}else{\n\t\t\tif(inputType === INPUT_IMAGE){\n\t\t\t\tsetCurrentFrame(frameVal)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetCurrentFrame(frameVal)\n\t\t}\n\t}\n\n\tconst skip_frame_backward = e => {\n\t\tvar frameVal = currframe_redux - skip_value\n\t\tif(frameVal < 0){\n\t\t\tif(inputType === INPUT_IMAGE){\n\t\t\t\tsetCurrentFrame(0)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetCurrentFrame(0)\n\t\t}else{\n\t\t\tif(inputType === INPUT_IMAGE){\n\t\t\t\tsetCurrentFrame(frameVal)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetCurrentFrame(frameVal)\n\t\t}\n\t}\n\n\tconst change_annotation_type = (event) => {\n\t\tsetAnnotationType(event)\n\t}\n\n\tconst onKeyPress = (event) =>{\n\t\t//Making sure input for textbox doesnt get counted as a mode change\n\t\tif(keyCheck === false){\n\t\t\treturn;\n\t\t}\n\t\tif(segmentation_flag === true){\n\t\t\talert(\"Please finish your current action!\")\n\t\t\treturn;\n\t\t}\n\t\tif (event.key === ANNOTATION_BBOX){\n\t\t\ttoast_text = \"Mode Switch: Bounding Box\"\n\t\t\tchangeSave(true)\n\t\t\tsetAnnotationType(ANNOTATION_BBOX)\n\t\t}else if (event.key === ANNOTATION_KEYPOINT){\n\t\t\ttoast_text = \"Mode Switch: Key Point\"\n\t\t\tchangeSave(true)\n\t\t\tsetAnnotationType(ANNOTATION_KEYPOINT)\n\t\t}else if(event.key === ANNOTATION_SEG) {\n\t\t\t// toast_text = \"Mode Switch: Segmentation\"\n\t\t\t// changeSave(true)\n\t\t\t// setAnnotationType(ANNOTATION_SEG)\n\t\t}else if(event.key === ANNOTATION_FRAME){\n\t\t\ttoast_text = \"Mode Switch: Behavior Annotation\"\n\t\t\tchangeSave(true)\n\t\t\tsetAnnotationType(ANNOTATION_FRAME)\n\t\t}else if (event.key === \"a\"){\n\t\t\tvar annotext = \"\"\n\t\t\tif(annotationType === ANNOTATION_BBOX){\n\t\t\t\tannotext = \"Bounding Box\"\n\t\t\t}else if(annotationType === ANNOTATION_FRAME){\n\t\t\t\tannotext = \"Behavior Data\"\n\t\t\t}else if (annotationType === ANNOTATION_KEYPOINT){\n\t\t\t\tannotext = \"Keypoint\"\n\t\t\t}else if (annotationType === ANNOTATION_SEG){\n\t\t\t\tannotext = \"Segmentation\"\n\t\t\t}\n\t\t\ttoast_text = \"Added Annotation - \" + annotext\n\t\t\tif(annotationType !== ANNOTATION_SEG){\n\t\t\t\tchangeSave(true)\n\t\t\t}\n\t\t\taddToCanvas()\n\t\t}else if (event.key === \"q\"){\n\t\t\tskip_frame_backward()\n\t\t}else if (event.key === \"e\"){\n\t\t\tskip_frame_forward()\n\t\t}else if(event.key === \"w\"){\n\t\t    togglePlay()\n\t\t}\n\t}  \n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"keydown\", onKeyPress);\n\t\treturn () => document.removeEventListener(\"keydown\", onKeyPress);\n\t}, [onKeyPress]);\n\t\n\n\tconst handle_visual_toggle = () => {\n\t\tsetVisualToggle(Math.floor(Math.random() * 999999999999))\n\t}\n\n\tconst toggleKeyCheck = (toggle_val) => {\n\t\tconsole.log(\"Keycheck activated\")\n\t\tif(toggle_val === undefined){\n\t\t\tchangeKeyCheck(!keyCheck)\n\t\t}else{\n\t\t\tchangeKeyCheck(toggle_val)\n\t\t}\n\t}\n\n\tconst handleChangeAnnot = val => {\n\t\tsetCurrAnnotationData(val)\n\t}\n\n\tconst genFabricCanvas = () => {\n\t\tvar fcanvas = []\n\t\tfor(var i = 0; i < imagedata_redux.length; i++){\n\t\t\tlet canv = (\n\t\t\t\t<div style={{gridColumn: 1, gridRow:i+1, position: \"relative\",  top: 0, left: 0}}>\n\t\t\t\t\t<FabricRender \n\t\t\t\t\t\tcurrentFrame={currframe_redux}\n\t\t\t\t\t\tscaling_factor_height={scaling_factor_height}\n\t\t\t\t\t\tscaling_factor_width={scaling_factor_width}\n\t\t\t\t\t\tstream_num={i}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t\tfcanvas.push(canv)\n\t\t}\n\t\treturn(\n\t\t\t<div>\n\t\t\t{\n\t\t\t\tfcanvas.map((can, _) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tcan\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<CustomNavBar \n\t\t\t\tdisable_buttons={disable_buttons} \n\t\t\t\tvideo_width={scaling_factor_width} \n\t\t\t\tvideo_height={scaling_factor_height} \n\t\t\t\tskip_value={skip_value} \n\t\t\t\thandleOldAnnotation={handleOldAnnotation}\n\t\t\t\tcurrentFrame={currframe_redux}\n\t\t\t\tdisplay_frame_num={\"Frame #\" + parseInt(currframe_redux+1)+' / '+parseInt(metadata_redux['total_frames'])}\n\t\t\t\tskip_frame_forward={skip_frame_forward}\n\t\t\t\tskip_frame_backward={skip_frame_backward}\n\t\t\t\taddToCanvas={addToCanvas}\n\t\t\t\tANNOTATION_VIDEO_NAME={ANNOTATION_VIDEO_NAME}\n\t\t\t\tchange_annotation_type={change_annotation_type}\n\t\t\t\tVIDEO_METADATA={VIDEO_METADATA}\n\t\t\t\ttoggleKeyCheck={toggleKeyCheck}\n\t\t\t\thandle_visual_toggle={handle_visual_toggle}\n\t\t\t/>\n\t\t\t<Toast \n\t\t\t\tonClose={() => changeSave(false)} \n\t\t\t\tshow={save} delay={500} autohide\n\t\t\t\tstyle={{ position: 'absolute', top: '100', left: '100', zIndex: '100'}}\n\t\t\t>\n\t\t\t\t<Toast.Header>\n\t\t\t\t\t<strong className=\"mr-auto\">{toast_text}</strong>\n\t\t\t\t</Toast.Header>\n\t\t\t</Toast>\n\t\t\t{\n\t\t\t\tupload === true && \n\t\t\t\t<div style={{display: \"grid\"}}>\n\t\t\t\t\t{genFabricCanvas()}\n\t\t\t\t\t<div style={{gridColumn: 2, gridRow:1, position: \"relative\", top: 0, left: 0}}>\n\t\t\t\t\t\t<AnnotationTable\n\t\t\t\t\t\t\tannotation_data={currAnnotationData}\n\t\t\t\t\t\t\tchange_annotation_data={handleChangeAnnot}\n\t\t\t\t\t\t\tcurrentFrame={currframe_redux}\n\t\t\t\t\t\t\ttoggleKeyCheck={toggleKeyCheck}\n\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{\n\t\t\t\tupload === false &&\n\t\t\t\t<div>\n\t\t\t\t\t\"Video/Image upload not detected. Please upload.\"\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n}\n","export const ANNOTATION_FRAME = \"1\"\nexport const ANNOTATION_BBOX = \"2\"\nexport const ANNOTATION_SEG = \"3\"\nexport const ANNOTATION_KEYPOINT = \"4\"\n","\nimport React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Carousel from 'react-bootstrap/Carousel'\n\nimport MainUpload from './main_upload'\nimport { Container, Jumbotron, Card} from \"react-bootstrap\";\nimport Instructions from \"../Components/instructions\";\n\nimport selection_items from '../../static_data/selectionscreen_info.json'\n\n//<img src={process.env.PUBLIC_URL + '/favicon.ico'} alt=\"logo\" style={{width: \"30%\"}} />\nfunction SelectionScreen(){\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [upload, setUpload] = useState(false)\n    const handleUpload = (event) => {\n        setUpload(!upload)\n    }\n\n    const [multiview, setMultiview] = useState(false)\n\n    if(upload){\n        return (<MainUpload/>)\n    }else{\n        return (\n            <div>\n                <Modal show={show} onHide={handleClose} size='lg'>\n                    <Modal.Header closeButton>\n                    <Modal.Title>Instructions</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body><Instructions></Instructions></Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n                <main>\n                    <Jumbotron className=\"text-center\">\n                        <Container>\n                            <h1 className=\"jumbotron-heading\">AVAT</h1>\n                            <p className=\"lead text-muted\"> Analysis tool to record data for livestock behavior and computer vision applications. </p>\n                            <p>\n                                <Button onClick={handleUpload} variant=\"success\" className=\"mx-1 my-2\">Video Upload</Button>\n                            </p>\n                        </Container>\n                    </Jumbotron>\n                        <Carousel controls={false} fade style={{\"width\": \"70%\", \"marginLeft\": \"auto\", \"marginRight\": \"auto\"}}>\n                            {\n                                selection_items.map((item, key) => {\n                                    return(\n                                        <Carousel.Item key={key} interval={item.slide_time}>\n                                            <Card \n                                                className=\"mb-5 box-shadow\" \n                                                top=\"true\"\n                                                width='100%'\n                                            >\n                                                <Card.Img width=\"60%\" variant=\"top\" src={process.env.PUBLIC_URL + item.src} />\n                                                <Card.Body style={{\"textAlign\": \"center\"}}>\n                                                    <Card.Title>{item.altText}</Card.Title>\n                                                    <Card.Text>{item.description}</Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Carousel.Item>\n                                    )\n                                })\n                            }\n                        </Carousel>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default SelectionScreen;","/**\n * @author Pradeep Senthil (pradeepsen99@gmail.com)\n * @\n */\n\n import React, { useState } from \"react\"; \n import ReactDOM from 'react-dom'\n import './App.css';\n import ReactPlayer from 'react-player'\n import 'bootstrap/dist/css/bootstrap.min.css';\n \n import FrontEnd from './ui_elements/Pages/main_upload'\n import SelectionScreen from './ui_elements/Pages/selection_screen'\n \n //<FrontEnd></FrontEnd>\n function App() {\n   return (\n     <div>\n       <SelectionScreen></SelectionScreen>    \n     </div>\n   );\n }\n       //<ActiveObject />\n       //<input type=\"file\" onChange={handleVideoUpload1} />\n       //<div>\n         //<ReactPlayer url={videoFilePath1} width=\"50%\" height=\"50%\" controls={true} style={{position:'relative', float:'left'}}/>\n         //<Fabric/>\n       //</div>\n \n export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\n/* ReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n */\n\n//REDUX code\nReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n/**\n * IF NEED TO RE-ENABLE STRICT MODE THEN UNNCOMMENT AND ADD BACK\n * \n *   <React.StrictMode>\n    <MainUpload></MainUpload>\n  </React.StrictMode>,\n */\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}